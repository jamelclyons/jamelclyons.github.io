{"version":3,"file":"About.js","sources":["../../node_modules/react-redux/es/hooks/useStore.js","../../node_modules/react-redux/es/hooks/useDispatch.js","../../src/views/components/Member.jsx","../../src/views/components/SocialBar.jsx","../../src/views/About.jsx"],"sourcesContent":["import { ReactReduxContext } from '../components/Context';\nimport { useReduxContext as useDefaultReduxContext, createReduxContextHook } from './useReduxContext';\n/**\r\n * Hook factory, which creates a `useStore` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useStore` hook bound to the specified context.\r\n */\n\nexport function createStoreHook(context = ReactReduxContext) {\n  const useReduxContext = // @ts-ignore\n  context === ReactReduxContext ? useDefaultReduxContext : // @ts-ignore\n  createReduxContextHook(context);\n  return function useStore() {\n    const {\n      store\n    } = useReduxContext(); // @ts-ignore\n\n    return store;\n  };\n}\n/**\r\n * A hook to access the redux store.\r\n *\r\n * @returns {any} the redux store\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useStore } from 'react-redux'\r\n *\r\n * export const ExampleComponent = () => {\r\n *   const store = useStore()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */\n\nexport const useStore = /*#__PURE__*/createStoreHook();","import { ReactReduxContext } from '../components/Context';\nimport { useStore as useDefaultStore, createStoreHook } from './useStore';\n/**\r\n * Hook factory, which creates a `useDispatch` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useDispatch` hook bound to the specified context.\r\n */\n\nexport function createDispatchHook(context = ReactReduxContext) {\n  const useStore = // @ts-ignore\n  context === ReactReduxContext ? useDefaultStore : createStoreHook(context);\n  return function useDispatch() {\n    const store = useStore(); // @ts-ignore\n\n    return store.dispatch;\n  };\n}\n/**\r\n * A hook to access the redux `dispatch` function.\r\n *\r\n * @returns {any|function} redux store's `dispatch` function\r\n *\r\n * @example\r\n *\r\n * import React, { useCallback } from 'react'\r\n * import { useDispatch } from 'react-redux'\r\n *\r\n * export const CounterComponent = ({ value }) => {\r\n *   const dispatch = useDispatch()\r\n *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])\r\n *   return (\r\n *     <div>\r\n *       <span>{value}</span>\r\n *       <button onClick={increaseCounter}>Increase counter</button>\r\n *     </div>\r\n *   )\r\n * }\r\n */\n\nexport const useDispatch = /*#__PURE__*/createDispatchHook();","function Member(props) {\n  const { url, email } = props;\nconsole.log(email);\n  return (\n    <>\n      <div className=\"member-card card\">\n        <div className=\"member-pic\">\n          <img src={url} alt=\"\" />\n        </div>\n\n        <div className=\"role\">\n          <h5>Designer Software Development Engineer</h5>\n        </div>\n\n        <div className=\"member-contact\">\n            <a href={`mailto:${email}`}>\n              <i className=\"fa fa-envelope fa-fw\"></i>\n            </a>\n          </div>\n      </div>\n    </>\n  );\n}\n\nexport default Member;\n","import React from 'react';\n\nfunction SocialBar(props) {\n  const { socialAccounts, email } = props;\n\n  console.log(socialAccounts);\n  var twitter = '';\n  var linkedin = '';\n  var instagram = '';\n  var mailto = `mailto:${email}`;\n\n  socialAccounts.forEach((account) => {\n    if (account['provider'] === 'twitter') {\n      twitter = account['url'];\n    }\n\n    if (account['provider'] === 'linkedin') {\n      linkedin = account['url'];\n    }\n\n    if (account['provider'] === 'instagram') {\n      instagram = account['url'];\n    }\n  });\n  return (\n    <div class=\"social-bar\">\n      <a href={twitter} target=\"_blank\">\n        <i class=\"fa fa-twitter fa-fw\"></i>\n      </a>\n\n      <a href={mailto} target=\"_blank\">\n        <i class=\"fa fa-envelope fa-fw\"></i>\n      </a>\n\n      <a href={linkedin} target=\"_blank\">\n        <i class=\"fa fa-linkedin fa-fw\"></i>\n      </a>\n\n      <a href={instagram} target=\"_blank\">\n        <i class=\"fa fa-instagram fa-fw\"></i>\n      </a>\n    </div>\n  );\n}\n\nexport default SocialBar;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getMissionStatement } from '../controllers/aboutSlice';\nimport { getContent } from '../controllers/contentSlice';\nimport {\n  getUser,\n  getOrganizations,\n  getRepos,\n  getSocialAccounts,\n} from '../controllers/githubSlice';\n\nimport ContentComponent from './components/ContentComponent';\nimport LoadingComponent from './components/LoadingComponent';\nimport FoundersComponent from './components/FoundersComponent';\nimport Member from './components/Member';\nimport SocialBar from './components/SocialBar';\n\nfunction About() {\n  const dispatch = useDispatch();\n\n  const { missionStatement } = useSelector((state) => state.about);\n  const {\n    contentLoading,\n    contentStatusCode,\n    contentErrorMessage,\n    title,\n    content,\n  } = useSelector((state) => state.content);\n  const { user, socialAccounts } = useSelector((state) => state.github);\n\n  useEffect(() => {\n    if (contentStatusCode && contentErrorMessage) {\n      setMessageType('error');\n      setMessage(contentErrorMessage);\n    }\n  }, [contentStatusCode, contentErrorMessage]);\n\n  useEffect(() => {\n    dispatch(getUser('jamelclyons'));\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getOrganizations('jamelclyons'));\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getRepos('jamelclyons'));\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getSocialAccounts('jamelclyons'));\n  }, [dispatch]);\nconsole.log(user);\n  return (\n    <>\n      <main className=\"about\">\n        <h1 className=\"title\">{user.name}</h1>\n\n        <div className=\"mission-statement-card card\">\n          <h3 className=\"mission-statement\">\n            <q>{user.bio}</q>\n          </h3>\n        </div>\n\n        <Member url={user.avatar_url} email={user.email} />\n\n        <SocialBar socialAccounts={socialAccounts} email={user.email} />\n      </main>\n    </>\n  );\n}\n\nexport default About;\n"],"names":["createStoreHook","context","ReactReduxContext","useReduxContext","useDefaultReduxContext","createReduxContextHook","store","useStore","createDispatchHook","useDefaultStore","dispatch","useDispatch","Member","props","url","email","console","log","jsx","Fragment","children","jsxs","className","src","alt","href","SocialBar","socialAccounts","twitter","linkedin","instagram","mailto","forEach","account","class","target","About","useSelector","state","about","contentLoading","contentStatusCode","contentErrorMessage","title","content","user","github","useEffect","setMessageType","setMessage","getUser","getOrganizations","getRepos","getSocialAccounts","name","bio","avatar_url"],"mappings":"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","x_google_ignoreList":[0,1]}