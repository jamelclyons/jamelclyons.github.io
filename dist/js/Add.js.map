{"version":3,"file":"Add.js","sources":["../../src/model/ProjectSolution.ts","../../src/model/Gallery.ts","../../src/model/ProjectDesign.ts","../../src/model/ProjectDevelopment.ts","../../src/model/ProjectDelivery.ts","../../src/model/ProjectProcess.ts","../../src/model/ProjectProblem.ts","../../src/model/ProjectDetails.ts","../../src/views/components/add/AddProject.jsx","../../src/views/Add.jsx"],"sourcesContent":["class ProjectSolution {\n  solution: Array<string> = [];\n  gallery: Array<string> = [];\n\n  constructor(data: Record<string, any> = {}) {\n    this.solution = data?.solution || [];\n    this.gallery = data?.gallery || [];\n  }\n\n  toObject(): Record<string, any> {\n    return {\n      solution: this.solution,\n      gallery: this.gallery,\n    };\n  }\n}\n\nexport default ProjectSolution;\n","import Image from \"./Image\";\n\nclass Gallery {\n  logos: Array<Image>;\n  icons: Array<Image>;\n  animations: Array<Image>;\n  umlDiagrams: Array<Image>;\n\n  constructor(data: Record<string, any> = {}) {\n    this.logos = data?.logos || [];\n    this.icons = data?.icons || [];\n    this.animations = data?.animations || [];\n    this.umlDiagrams = data?.umlDiagrams || [];\n  }\n\n  toObject(): Record<string, any> {\n    return {\n      logos: this.logos,\n      icons: this.icons,\n      animations: this.animations,\n      uml_diagrams: this.umlDiagrams,\n    };\n  }\n}\n\nexport default Gallery;\n","import Gallery from './Gallery';\n\nclass ProjectDesign {\n  content: Array<string> = [];\n  checkList: Array<string> = [];\n  gallery: Gallery;\n  colorsList: Array<string> = [];\n\n  constructor(data: Record<string, any> = {}) {\n    this.content = data?.content || [];\n    this.checkList = data?.check_list || [];\n    this.gallery = new Gallery(data?.gallery);\n    this.colorsList = data?.colors_list || [];\n  }\n\n  toObject(): Record<string, any> {\n    return {\n      content: this.content,\n      check_list: this.checkList,\n      gallery: this.gallery.toObject(),\n      colors_list: this.colorsList\n    };\n  }\n}\n\nexport default ProjectDesign;\n","class ProjectDevelopment {\n  content: Array<string> = [];\n  checkList: Array<string> = [];\n  repoURL: string = '';\n  versionsList: Array<string> = [];\n\n  constructor(data: Record<string, any> = {}) {\n    this.content = data?.content || [];\n    this.checkList = data?.check_list || [];\n    this.repoURL = data?.repo_url || '';\n    this.versionsList = data?.versions_list || [];\n  }\n\n  toObject(): Record<string, any> {\n    return {\n      content: this.content,\n      check_list: this.checkList,\n      repo_url: this.repoURL,\n      versions_list: this.versionsList,\n    };\n  }\n}\n\nexport default ProjectDevelopment;\n","class ProjectDelivery {\n  content: Array<string> = [];\n  checkList: Array<string> = [];\n  gallery: Array<string> = [];\n\n  constructor(data: Record<string, any> = {}) {\n    this.content = data?.content || [];\n    this.checkList = data?.check_list || [];\n    this.gallery = data?.gallery || [];\n  }\n\n  toObject(): Record<string, any> {\n    return {\n      content: this.content,\n      check_list: this.checkList,\n      gallery: this.gallery\n    };\n  }\n}\n\nexport default ProjectDelivery;\n","import ProjectDesign from './ProjectDesign';\nimport ProjectDevelopment from './ProjectDevelopment';\nimport ProjectDelivery from './ProjectDelivery';\n\nclass ProjectProcess {\n  status: string = '';\n  design: ProjectDesign;\n  development: ProjectDevelopment;\n  delivery: ProjectDelivery;\n\n  constructor(\n    status: string,\n    design: ProjectDesign,\n    development: ProjectDevelopment,\n    delivery: ProjectDelivery\n  ) {\n    this.status = status;\n    this.design = design;\n    this.development = development;\n    this.delivery = delivery;\n  }\n\n  toObject(): Record<string, any> {\n    return {\n      status: this.status,\n      design: this.design.toObject(),\n      development: this.development.toObject(),\n      delivery: this.delivery.toObject(),\n    };\n  }\n}\n\nexport default ProjectProcess;\n","class ProjectProblem {\n  content: Array<string> = [];\n  gallery: Array<string> = [];\n\n  constructor(data: Record<string, any> = {}) {\n    this.content = data?.content || [];\n    this.gallery = data?.gallery || [];\n  }\n\n  toObject(): Record<string, any> {\n    return {\n      content: this.content,\n      gallery: this.gallery,\n    };\n  }\n}\n\nexport default ProjectProblem;\n","class ProjectDetails {\n  detailsList: Array<string> = [];\n  teamList: Array<string> = [];\n  clientID: Array<string> = [];\n\n  constructor(data: Record<string, any> = {}) {\n    this.detailsList = data?.details_list || [];\n    this.teamList = data?.team_list || [];\n    this.clientID = data?.client_id || '';\n  }\n\n  toObject(): Record<string, any> {\n    return {};\n  }\n}\n\nexport default ProjectDetails;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addProject } from '../../../controllers/addSlice.js';\nimport {\n  setMessage,\n  setMessageType,\n  setShowStatusBar,\n} from '../../../controllers/messageSlice.js';\nimport {\n  getProjectTypes,\n  getLanguages,\n  getFrameworks,\n  getTechnologies,\n} from '../../../controllers/taxonomiesSlice.js';\n\nimport StatusBarComponent from '../StatusBarComponent.jsx';\n\nimport Project from '../../../model/Project.ts';\nimport ProjectSolution from '../../../model/ProjectSolution.ts';\nimport ProjectDesign from '../../../model/ProjectDesign.ts';\nimport ProjectDevelopment from '../../../model/ProjectDevelopment.ts';\nimport ProjectDelivery from '../../../model/ProjectDelivery.ts';\nimport ProjectProcess from '../../../model/ProjectProcess.ts';\nimport ProjectProblem from '../../../model/ProjectProblem.ts';\nimport ProjectDetails from '../../../model/ProjectDetails.ts';\n\nfunction AddProject() {\n  const dispatch = useDispatch();\n\n  const { addLoading, addSuccessMessage, addErrorMessage } = useSelector(\n    (state) => state.add\n  );\n  const { projectTypes, languages, frameworks, technologies } = useSelector(\n    (state) => state.taxonomies\n  );\n\n  const [id, setId] = useState('');\n  const [title, setTitle] = useState('');\n  const [status, setStatus] = useState('');\n  const [types, setTypes] = useState([]);\n  const [description, setDescription] = useState('');\n  const [slug, setSlug] = useState('');\n  // const [design, setDesign] = useState([]);\n  const [designCheckList, setDesignCheckList] = useState([]);\n  const [designGallery, setDesignGallery] = useState([]);\n  const [colorsList, setColorsList] = useState([]);\n  // const [development, setDevelopment] = useState([]);\n  const [developmentCheckList, setDevelopmentCheckList] = useState([]);\n  const [repoURL, setRepoURL] = useState('');\n  const [versionsList, setVersionsList] = useState([]);\n\n  // const [delivery, setDelivery] = useState([]);\n  const [deliveryGallery, setDeliveryGallery] = useState([]);\n  const [deliveryCheckList, setDeliveryCheckList] = useState([]);\n  // const [problem, setProblem] = useState([]);\n  const [problemGallery, setProblemGallery] = useState([]);\n  // const [solution, setSolution] = useState([]);\n  const [solutionGallery, setSolutionGallery] = useState([]);\n  const [urlsList, setUrlsList] = useState([]);\n  const [detailsList, setDetailsList] = useState([]);\n  const [teamList, setTeamList] = useState([]);\n  const [clientID, setClientID] = useState('');\n\n  const [selectedProjectTypes, setSelectedProjectTypes] = useState([]);\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\n  const [selectedFrameworks, setSelectedFrameworks] = useState([]);\n  const [selectedTechnologies, setSelectedTechnologies] = useState([]);\n\n  const handleProjectTypesCheckboxChange = (id) => {\n    setSelectedProjectTypes((prevSelectedIds) =>\n      prevSelectedIds.includes(id)\n        ? prevSelectedIds.filter((selectedId) => selectedId !== id)\n        : [...prevSelectedIds, id]\n    );\n  };\n\n  const handleLanguagesCheckboxChange = (id) => {\n    setSelectedLanguages((prevSelectedIds) =>\n      prevSelectedIds.includes(id)\n        ? prevSelectedIds.filter((selectedId) => selectedId !== id)\n        : [...prevSelectedIds, id]\n    );\n  };\n\n  const handleFrameworksCheckboxChange = (id) => {\n    setSelectedFrameworks((prevSelectedIds) =>\n      prevSelectedIds.includes(id)\n        ? prevSelectedIds.filter((selectedId) => selectedId !== id)\n        : [...prevSelectedIds, id]\n    );\n  };\n\n  const handleTechnologiesCheckboxChange = (id) => {\n    setSelectedTechnologies((prevSelectedIds) =>\n      prevSelectedIds.includes(id)\n        ? prevSelectedIds.filter((selectedId) => selectedId !== id)\n        : [...prevSelectedIds, id]\n    );\n  };\n\n  const handleChange = (e) => {\n    try {\n      const { name, value } = e.target;\n\n      if (name === 'id') {\n        setId(value);\n      } else if (name === 'title') {\n        setTitle(value);\n      } else if (name === 'status') {\n        setStatus(value);\n      } else if (name === 'types') {\n        setTypes(value);\n      } else if (name === 'description') {\n        setDescription(value);\n      } else if (name === 'slug') {\n        setSlug(value);\n      } else if (name === 'design') {\n        setDesign(value);\n      } else if (name === 'design_check_list') {\n        setDesignCheckList(value);\n      } else if (name === 'design_gallery') {\n        setDesignGallery(value);\n      } else if (name === 'colors_list') {\n        setColorsList(value);\n      } else if (name === 'development') {\n        setDevelopment(value);\n      } else if (name === 'development_check_list') {\n        setDevelopmentCheckList(value);\n      } else if (name === 'repo_url') {\n        setRepoURL(value);\n      } else if (name === 'versions_list') {\n        setVersionsList(value);\n      } else if (name === 'project_languages') {\n        setLanguages(value);\n      } else if (name === 'project_frameworks') {\n        setFrameworks(value);\n      } else if (name === 'project_technologies') {\n        setTechnologies(value);\n      } else if (name === 'delivery') {\n        setDelivery(value);\n      } else if (name === 'delivery_gallery') {\n        setDeliveryGallery(value);\n      } else if (name === 'delivery_check_list') {\n        setDeliveryCheckList(value);\n      } else if (name === 'problem') {\n        setProblem(value);\n      } else if (name === 'problem_gallery') {\n        setProblemGallery(value);\n      } else if (name === 'solution') {\n        setSolution(value);\n      } else if (name === 'solution_gallery') {\n        setSolutionGallery(value);\n      } else if (name === 'urls_list') {\n        setUrlsList(value);\n      } else if (name === 'details_list') {\n        setDetailsList(value);\n      } else if (name === 'team_list') {\n        setTeamList(value);\n      } else if (name === 'client_id') {\n        setClientID(value);\n      }\n    } catch (error) {\n      dispatch(setMessage(error.message));\n      dispatch(setMessageType('error'));\n    }\n  };\n\n  const solutionData = {\n    solution_gallery: solutionGallery,\n  };\n\n  const designData = {\n    design_check_list: designCheckList,\n    design_gallery: designGallery,\n    colors_list: colorsList,\n  };\n\n  const developmentData = {\n    development_check_list: developmentCheckList,\n    repo_url: repoURL,\n    versions_list: versionsList,\n  };\n\n  const deliveryData = {\n    delivery_gallery: deliveryGallery,\n    delivery_check_list: deliveryCheckList,\n  };\n\n  const problemData = {};\n\n  const detailsData = {};\n\n  const solution = new ProjectSolution(solutionData);\n\n  const design = new ProjectDesign(designData);\n  const development = new ProjectDevelopment(developmentData);\n  const delivery = new ProjectDelivery(deliveryData);\n  const process = new ProjectProcess(status, design, development, delivery);\n\n  const problem = new ProjectProblem(problemData);\n  const details = new ProjectDetails(detailsData);\n\n  const handleAddProject = async (e) => {\n    e.preventDefault();\n\n    try {\n      const project = new Project(\n        id,\n        title,\n        description,\n        urlsList,\n        solution,\n        process,\n        problem,\n        selectedProjectTypes,\n        selectedLanguages,\n        selectedFrameworks,\n        selectedTechnologies,\n        details\n      ).toObject();\n\n      dispatch(addProject(project));\n\n      dispatch(setMessageType('info'));\n      dispatch(setMessage('Standbye while an attempt to log you is made.'));\n    } catch (error) {\n      dispatch(setMessageType('error'));\n      dispatch(setMessage(error.message));\n      dispatch(setShowStatusBar(Date.now()));\n    }\n  };\n\n  useEffect(() => {\n    if (addLoading) {\n      dispatch(setShowStatusBar(Date.now()));\n    }\n  }, [addLoading]);\n\n  useEffect(() => {\n    if (addSuccessMessage) {\n      dispatch(setMessage(addSuccessMessage));\n      dispatch(setMessageType('success'));\n      dispatch(setShowStatusBar(Date.now()));\n    }\n  }, [addSuccessMessage]);\n\n  useEffect(() => {\n    if (addErrorMessage) {\n      dispatch(setMessage(addErrorMessage));\n      dispatch(setMessageType('error'));\n      dispatch(setShowStatusBar(Date.now()));\n    }\n  }, [addErrorMessage]);\n\n  useEffect(() => {\n    dispatch(getProjectTypes());\n  }, []);\n\n  useEffect(() => {\n    dispatch(getLanguages());\n  }, []);\n\n  useEffect(() => {\n    dispatch(getFrameworks());\n  }, []);\n\n  useEffect(() => {\n    dispatch(getTechnologies());\n  }, []);\n\n  return (\n    <>\n      <main>\n        <h2>Add Project</h2>\n\n        <form action=\"\">\n          <input\n            type=\"text\"\n            name=\"id\"\n            placeholder=\"ID\"\n            value={id}\n            onChange={handleChange}\n          />\n\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title\"\n            value={title}\n            onChange={handleChange}\n          />\n\n          <input\n            type=\"text\"\n            name=\"status\"\n            placeholder=\"Status\"\n            value={status}\n            onChange={handleChange}\n          />\n\n          <input\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Description\"\n            value={description}\n            onChange={handleChange}\n          />\n\n          <h2 className=\"title\">design</h2>\n\n          {/* <input\n            type=\"text\"\n            name=\"design\"\n            placeholder=\"Design\"\n            value={design}\n            onChange={handleChange}\n          /> */}\n\n          {/* <input\n            type=\"text\"\n            name=\"design_check_list\"\n            placeholder=\"Design Check List\"\n            value={designCheckList}\n            onChange={handleChange}\n          /> */}\n\n          {/* <input\n            type=\"text\"\n            name=\"design_gallery\"\n            placeholder=\"Design Gallery\"\n            value={designGallery}\n            onChange={handleChange}\n          /> */}\n\n          {/* <input\n            type=\"text\"\n            name=\"colors_list\"\n            placeholder=\"Colors List\"\n            value={colors_list}\n            onChange={handleChange}\n          /> */}\n\n          {/* <input\n            type=\"text\"\n            name=\"development\"\n            placeholder=\"Development\"\n            value={development}\n            onChange={handleChange}\n          /> */}\n\n          <h2 className=\"title\">development</h2>\n\n          {/* <input\n            type=\"text\"\n            name=\"development_check_list\"\n            placeholder=\"Development Check List\"\n            value={developmentCheckList}\n            onChange={handleChange}\n          /> */}\n\n          <input\n            type=\"text\"\n            name=\"repo_url\"\n            placeholder=\"Repo URL\"\n            value={repoURL}\n            onChange={handleChange}\n          />\n\n          {/* <input\n            type=\"text\"\n            name=\"versions_list\"\n            placeholder=\"Versions List\"\n            value={versionsList}\n            onChange={handleChange}\n          /> */}\n\n          <div className=\"project-selection\">\n            <label for=\"options\">Choose Project Types:</label>\n\n            {Array.isArray(projectTypes) &&\n              projectTypes.map((item) => (\n                <div className=\"project-checkbox\" key={item.id}>\n                  <input\n                    type=\"checkbox\"\n                    id={`checkbox-${item.id}`}\n                    value={item.id}\n                    checked={selectedProjectTypes.includes(item.id)}\n                    onChange={() => handleProjectTypesCheckboxChange(item.id)}\n                  />\n                  <label htmlFor={`checkbox-${item.id}`}>{item.title}</label>\n                </div>\n              ))}\n\n            <h4>Selected IDs:</h4>\n            <pre>{JSON.stringify(selectedProjectTypes, null, 2)}</pre>\n          </div>\n\n          <div className=\"project-selection\">\n          <label for=\"options\">Choose Languages:</label>\n\n            {Array.isArray(languages) &&\n              languages.map((item) => (\n                <div className=\"project-checkbox\" key={item.id}>\n                  <input\n                    type=\"checkbox\"\n                    id={`checkbox-${item.id}`}\n                    value={item.id}\n                    checked={selectedLanguages.includes(item.id)}\n                    onChange={() => handleLanguagesCheckboxChange(item.id)}\n                  />\n                  <label htmlFor={`checkbox-${item.id}`}>{item.title}</label>\n                </div>\n              ))}\n\n            <h4>Selected IDs:</h4>\n            <pre>{JSON.stringify(selectedLanguages, null, 2)}</pre>\n          </div>\n\n          <div className=\"project-selection\">\n          <label for=\"options\">Choose Frameworks:</label>\n\n            {Array.isArray(frameworks) &&\n              projectTypes.map((item) => (\n                <div className=\"project-checkbox\" key={item.id}>\n                  <input\n                    type=\"checkbox\"\n                    id={`checkbox-${item.id}`}\n                    value={item.id}\n                    checked={selectedFrameworks.includes(item.id)}\n                    onChange={() => handleFrameworksCheckboxChange(item.id)}\n                  />\n                  <label htmlFor={`checkbox-${item.id}`}>{item.title}</label>\n                </div>\n              ))}\n\n            <h4>Selected IDs:</h4>\n            <pre>{JSON.stringify(selectedFrameworks, null, 2)}</pre>\n          </div>\n\n          <div className=\"project-selection\">\n          <label for=\"options\">Choose Technologies:</label>\n\n            {Array.isArray(technologies) &&\n              technologies.map((item) => (\n                <div className=\"project-checkbox\" key={item.id}>\n                  <input\n                    type=\"checkbox\"\n                    id={`checkbox-${item.id}`}\n                    value={item.id}\n                    checked={selectedTechnologies.includes(item.id)}\n                    onChange={() => handleTechnologiesCheckboxChange(item.id)}\n                  />\n                  <label htmlFor={`checkbox-${item.id}`}>{item.title}</label>\n                </div>\n              ))}\n\n            <h4>Selected IDs:</h4>\n            <pre>{JSON.stringify(selectedTechnologies, null, 2)}</pre>\n          </div>\n\n          <h2 className=\"title\">delivery</h2>\n\n          {/* <input\n            type=\"text\"\n            name=\"delivery_gallery\"\n            placeholder=\"Delivery Gallery\"\n            value={delivery}\n            onChange={handleChange}\n          /> */}\n\n          {/* <input\n            type=\"text\"\n            name=\"delivery_check_list\"\n            placeholder=\"Delivery Check List\"\n            value={deliveryCheckList}\n            onChange={handleChange}\n          /> */}\n\n          {/* Problem */}\n          {/* Problem Gallery */}\n          {/* Solution */}\n          {/* Solution Gallery */}\n\n          {/* <input\n            type=\"text\"\n            name=\"urls_list\"\n            placeholder=\"URLs List\"\n            value={urlsList}\n            onChange={handleChange}\n          />\n\n          <input\n            type=\"text\"\n            name=\"details_list\"\n            placeholder=\"Details List\"\n            value={detailsList}\n            onChange={handleChange}\n          />\n\n          <input\n            type=\"text\"\n            name=\"team_list\"\n            placeholder=\"Team List\"\n            value={teamList}\n            onChange={handleChange}\n          /> */}\n\n          <input\n            type=\"text\"\n            name=\"client_id\"\n            placeholder=\"client_id\"\n            value={clientID}\n            onChange={handleChange}\n          />\n\n          <button onClick={handleAddProject}>\n            <h3>add</h3>\n          </button>\n        </form>\n\n        <StatusBarComponent />\n      </main>\n    </>\n  );\n}\n\nexport default AddProject;\n","import React from 'react';\n\nimport AddProject from './components/add/AddProject';\n\nfunction Add() {\n  return (\n    <section className=\"add\">\n      <>\n        <AddProject />\n      </>\n    </section>\n  );\n}\n\nexport default Add;\n"],"names":["ProjectSolution","data","Gallery","ProjectDesign","ProjectDevelopment","ProjectDelivery","ProjectProcess","status","design","development","delivery","ProjectProblem","ProjectDetails","AddProject","dispatch","useDispatch","addLoading","addSuccessMessage","addErrorMessage","useSelector","state","add","projectTypes","languages","frameworks","technologies","taxonomies","id","setId","useState","title","setTitle","setStatus","types","setTypes","description","setDescription","slug","setSlug","designCheckList","setDesignCheckList","designGallery","setDesignGallery","colorsList","setColorsList","developmentCheckList","setDevelopmentCheckList","repoURL","setRepoURL","versionsList","setVersionsList","deliveryGallery","setDeliveryGallery","deliveryCheckList","setDeliveryCheckList","problemGallery","setProblemGallery","solutionGallery","setSolutionGallery","urlsList","setUrlsList","detailsList","setDetailsList","teamList","setTeamList","clientID","setClientID","selectedProjectTypes","setSelectedProjectTypes","selectedLanguages","setSelectedLanguages","selectedFrameworks","setSelectedFrameworks","selectedTechnologies","setSelectedTechnologies","handleProjectTypesCheckboxChange","prevSelectedIds","includes","filter","selectedId","handleLanguagesCheckboxChange","handleFrameworksCheckboxChange","handleTechnologiesCheckboxChange","handleChange","e","name","value","target","setDesign","setDevelopment","setLanguages","setFrameworks","setTechnologies","setDelivery","setProblem","setSolution","error","setMessage","message","setMessageType","solutionData","solution_gallery","designData","design_check_list","design_gallery","colors_list","developmentData","development_check_list","repo_url","versions_list","deliveryData","delivery_gallery","delivery_check_list","problemData","detailsData","solution","process","problem","details","handleAddProject","preventDefault","project","Project","toObject","addProject","setShowStatusBar","Date","now","useEffect","getProjectTypes","getLanguages","getFrameworks","getTechnologies","jsx","Fragment","children","jsxs","action","type","placeholder","onChange","className","for","Array","isArray","map","item","checked","htmlFor","JSON","stringify","onClick","StatusBarComponent","Add"],"mappings":"iTAAA,MAAMA,EAAgB,CAIpB,YAAYC,EAA4B,GAAI,CAH5C,KAAA,SAA0B,CAAC,EAC3B,KAAA,QAAyB,CAAC,EAGnB,KAAA,UAAWA,GAAA,YAAAA,EAAM,WAAY,CAAC,EAC9B,KAAA,SAAUA,GAAA,YAAAA,EAAM,UAAW,CAAC,CAAA,CAGnC,UAAgC,CACvB,MAAA,CACL,SAAU,KAAK,SACf,QAAS,KAAK,OAChB,CAAA,CAEJ,CCbA,MAAMC,EAAQ,CAMZ,YAAYD,EAA4B,GAAI,CACrC,KAAA,OAAQA,GAAA,YAAAA,EAAM,QAAS,CAAC,EACxB,KAAA,OAAQA,GAAA,YAAAA,EAAM,QAAS,CAAC,EACxB,KAAA,YAAaA,GAAA,YAAAA,EAAM,aAAc,CAAC,EAClC,KAAA,aAAcA,GAAA,YAAAA,EAAM,cAAe,CAAC,CAAA,CAG3C,UAAgC,CACvB,MAAA,CACL,MAAO,KAAK,MACZ,MAAO,KAAK,MACZ,WAAY,KAAK,WACjB,aAAc,KAAK,WACrB,CAAA,CAEJ,CCrBA,MAAME,EAAc,CAMlB,YAAYF,EAA4B,GAAI,CAL5C,KAAA,QAAyB,CAAC,EAC1B,KAAA,UAA2B,CAAC,EAE5B,KAAA,WAA4B,CAAC,EAGtB,KAAA,SAAUA,GAAA,YAAAA,EAAM,UAAW,CAAC,EAC5B,KAAA,WAAYA,GAAA,YAAAA,EAAM,aAAc,CAAC,EACtC,KAAK,QAAU,IAAIC,GAAQD,GAAA,YAAAA,EAAM,OAAO,EACnC,KAAA,YAAaA,GAAA,YAAAA,EAAM,cAAe,CAAC,CAAA,CAG1C,UAAgC,CACvB,MAAA,CACL,QAAS,KAAK,QACd,WAAY,KAAK,UACjB,QAAS,KAAK,QAAQ,SAAS,EAC/B,YAAa,KAAK,UACpB,CAAA,CAEJ,CCvBA,MAAMG,EAAmB,CAMvB,YAAYH,EAA4B,GAAI,CAL5C,KAAA,QAAyB,CAAC,EAC1B,KAAA,UAA2B,CAAC,EACV,KAAA,QAAA,GAClB,KAAA,aAA8B,CAAC,EAGxB,KAAA,SAAUA,GAAA,YAAAA,EAAM,UAAW,CAAC,EAC5B,KAAA,WAAYA,GAAA,YAAAA,EAAM,aAAc,CAAC,EACjC,KAAA,SAAUA,GAAA,YAAAA,EAAM,WAAY,GAC5B,KAAA,cAAeA,GAAA,YAAAA,EAAM,gBAAiB,CAAC,CAAA,CAG9C,UAAgC,CACvB,MAAA,CACL,QAAS,KAAK,QACd,WAAY,KAAK,UACjB,SAAU,KAAK,QACf,cAAe,KAAK,YACtB,CAAA,CAEJ,CCrBA,MAAMI,EAAgB,CAKpB,YAAYJ,EAA4B,GAAI,CAJ5C,KAAA,QAAyB,CAAC,EAC1B,KAAA,UAA2B,CAAC,EAC5B,KAAA,QAAyB,CAAC,EAGnB,KAAA,SAAUA,GAAA,YAAAA,EAAM,UAAW,CAAC,EAC5B,KAAA,WAAYA,GAAA,YAAAA,EAAM,aAAc,CAAC,EACjC,KAAA,SAAUA,GAAA,YAAAA,EAAM,UAAW,CAAC,CAAA,CAGnC,UAAgC,CACvB,MAAA,CACL,QAAS,KAAK,QACd,WAAY,KAAK,UACjB,QAAS,KAAK,OAChB,CAAA,CAEJ,CCdA,MAAMK,EAAe,CAMnB,YACEC,EACAC,EACAC,EACAC,EACA,CAVe,KAAA,OAAA,GAWf,KAAK,OAASH,EACd,KAAK,OAASC,EACd,KAAK,YAAcC,EACnB,KAAK,SAAWC,CAAA,CAGlB,UAAgC,CACvB,MAAA,CACL,OAAQ,KAAK,OACb,OAAQ,KAAK,OAAO,SAAS,EAC7B,YAAa,KAAK,YAAY,SAAS,EACvC,SAAU,KAAK,SAAS,SAAS,CACnC,CAAA,CAEJ,CC9BA,MAAMC,EAAe,CAInB,YAAYV,EAA4B,GAAI,CAH5C,KAAA,QAAyB,CAAC,EAC1B,KAAA,QAAyB,CAAC,EAGnB,KAAA,SAAUA,GAAA,YAAAA,EAAM,UAAW,CAAC,EAC5B,KAAA,SAAUA,GAAA,YAAAA,EAAM,UAAW,CAAC,CAAA,CAGnC,UAAgC,CACvB,MAAA,CACL,QAAS,KAAK,QACd,QAAS,KAAK,OAChB,CAAA,CAEJ,CCfA,MAAMW,EAAe,CAKnB,YAAYX,EAA4B,GAAI,CAJ5C,KAAA,YAA6B,CAAC,EAC9B,KAAA,SAA0B,CAAC,EAC3B,KAAA,SAA0B,CAAC,EAGpB,KAAA,aAAcA,GAAA,YAAAA,EAAM,eAAgB,CAAC,EACrC,KAAA,UAAWA,GAAA,YAAAA,EAAM,YAAa,CAAC,EAC/B,KAAA,UAAWA,GAAA,YAAAA,EAAM,YAAa,EAAA,CAGrC,UAAgC,CAC9B,MAAO,CAAC,CAAA,CAEZ,CCaA,SAASY,IAAa,CACpB,MAAMC,EAAWC,GAAY,EAEvB,CAAEC,WAAAA,EAAYC,kBAAAA,EAAmBC,gBAAAA,CAAoB,EAAAC,EACxDC,GAAUA,EAAMC,GACnB,EACM,CAAEC,aAAAA,EAAcC,UAAAA,EAAWC,WAAAA,EAAYC,aAAAA,CAAiB,EAAAN,EAC3DC,GAAUA,EAAMM,UACnB,EAEM,CAACC,EAAIC,CAAK,EAAIC,EAAAA,SAAS,EAAE,EACzB,CAACC,EAAOC,CAAQ,EAAIF,EAAAA,SAAS,EAAE,EAC/B,CAACtB,EAAQyB,CAAS,EAAIH,EAAAA,SAAS,EAAE,EACjC,CAACI,GAAOC,CAAQ,EAAIL,EAAAA,SAAS,CAAA,CAAE,EAC/B,CAACM,EAAaC,CAAc,EAAIP,EAAAA,SAAS,EAAE,EAC3C,CAACQ,GAAMC,CAAO,EAAIT,EAAAA,SAAS,EAAE,EAE7B,CAACU,EAAiBC,CAAkB,EAAIX,EAAAA,SAAS,CAAA,CAAE,EACnD,CAACY,EAAeC,CAAgB,EAAIb,EAAAA,SAAS,CAAA,CAAE,EAC/C,CAACc,EAAYC,CAAa,EAAIf,EAAAA,SAAS,CAAA,CAAE,EAEzC,CAACgB,EAAsBC,CAAuB,EAAIjB,EAAAA,SAAS,CAAA,CAAE,EAC7D,CAACkB,EAASC,CAAU,EAAInB,EAAAA,SAAS,EAAE,EACnC,CAACoB,EAAcC,CAAe,EAAIrB,EAAAA,SAAS,CAAA,CAAE,EAG7C,CAACsB,EAAiBC,CAAkB,EAAIvB,EAAAA,SAAS,CAAA,CAAE,EACnD,CAACwB,EAAmBC,CAAoB,EAAIzB,EAAAA,SAAS,CAAA,CAAE,EAEvD,CAAC0B,GAAgBC,CAAiB,EAAI3B,EAAAA,SAAS,CAAA,CAAE,EAEjD,CAAC4B,EAAiBC,CAAkB,EAAI7B,EAAAA,SAAS,CAAA,CAAE,EACnD,CAAC8B,EAAUC,CAAW,EAAI/B,EAAAA,SAAS,CAAA,CAAE,EACrC,CAACgC,GAAaC,CAAc,EAAIjC,EAAAA,SAAS,CAAA,CAAE,EAC3C,CAACkC,GAAUC,EAAW,EAAInC,EAAAA,SAAS,CAAA,CAAE,EACrC,CAACoC,GAAUC,EAAW,EAAIrC,EAAAA,SAAS,EAAE,EAErC,CAACsC,EAAsBC,EAAuB,EAAIvC,EAAAA,SAAS,CAAA,CAAE,EAC7D,CAACwC,EAAmBC,EAAoB,EAAIzC,EAAAA,SAAS,CAAA,CAAE,EACvD,CAAC0C,EAAoBC,EAAqB,EAAI3C,EAAAA,SAAS,CAAA,CAAE,EACzD,CAAC4C,EAAsBC,EAAuB,EAAI7C,EAAAA,SAAS,CAAA,CAAE,EAE7D8C,GAAoChD,GAAO,CAC/CyC,GAAyBQ,GACvBA,EAAgBC,SAASlD,CAAE,EACvBiD,EAAgBE,OAAQC,GAAeA,IAAepD,CAAE,EACxD,CAAC,GAAGiD,EAAiBjD,CAAE,CAC7B,CACF,EAEMqD,GAAiCrD,GAAO,CAC5C2C,GAAsBM,GACpBA,EAAgBC,SAASlD,CAAE,EACvBiD,EAAgBE,OAAQC,GAAeA,IAAepD,CAAE,EACxD,CAAC,GAAGiD,EAAiBjD,CAAE,CAC7B,CACF,EAEMsD,GAAkCtD,GAAO,CAC7C6C,GAAuBI,GACrBA,EAAgBC,SAASlD,CAAE,EACvBiD,EAAgBE,OAAQC,GAAeA,IAAepD,CAAE,EACxD,CAAC,GAAGiD,EAAiBjD,CAAE,CAC7B,CACF,EAEMuD,GAAoCvD,GAAO,CAC/C+C,GAAyBE,GACvBA,EAAgBC,SAASlD,CAAE,EACvBiD,EAAgBE,OAAQC,GAAeA,IAAepD,CAAE,EACxD,CAAC,GAAGiD,EAAiBjD,CAAE,CAC7B,CACF,EAEMwD,EAAgBC,GAAM,CACtB,GAAA,CACF,KAAM,CAAEC,KAAAA,EAAMC,MAAAA,CAAM,EAAIF,EAAEG,OAEtBF,IAAS,KACXzD,EAAM0D,CAAK,EACFD,IAAS,QAClBtD,EAASuD,CAAK,EACLD,IAAS,SAClBrD,EAAUsD,CAAK,EACND,IAAS,QAClBnD,EAASoD,CAAK,EACLD,IAAS,cAClBjD,EAAekD,CAAK,EACXD,IAAS,OAClB/C,EAAQgD,CAAK,EACJD,IAAS,SAClBG,UAAUF,CAAK,EACND,IAAS,oBAClB7C,EAAmB8C,CAAK,EACfD,IAAS,iBAClB3C,EAAiB4C,CAAK,EACbD,IAAS,cAClBzC,EAAc0C,CAAK,EACVD,IAAS,cAClBI,eAAeH,CAAK,EACXD,IAAS,yBAClBvC,EAAwBwC,CAAK,EACpBD,IAAS,WAClBrC,EAAWsC,CAAK,EACPD,IAAS,gBAClBnC,EAAgBoC,CAAK,EACZD,IAAS,oBAClBK,aAAaJ,CAAK,EACTD,IAAS,qBAClBM,cAAcL,CAAK,EACVD,IAAS,uBAClBO,gBAAgBN,CAAK,EACZD,IAAS,WAClBQ,YAAYP,CAAK,EACRD,IAAS,mBAClBjC,EAAmBkC,CAAK,EACfD,IAAS,sBAClB/B,EAAqBgC,CAAK,EACjBD,IAAS,UAClBS,WAAWR,CAAK,EACPD,IAAS,kBAClB7B,EAAkB8B,CAAK,EACdD,IAAS,WAClBU,YAAYT,CAAK,EACRD,IAAS,mBAClB3B,EAAmB4B,CAAK,EACfD,IAAS,YAClBzB,EAAY0B,CAAK,EACRD,IAAS,eAClBvB,EAAewB,CAAK,EACXD,IAAS,YAClBrB,GAAYsB,CAAK,EACRD,IAAS,aAClBnB,GAAYoB,CAAK,QAEZU,EAAO,CACLlF,EAAAmF,EAAWD,EAAME,OAAO,CAAC,EACzBpF,EAAAqF,EAAe,OAAO,CAAC,CAClC,CACF,EAEMC,GAAe,CACnBC,iBAAkB5C,CACpB,EAEM6C,GAAa,CACjBC,kBAAmBhE,EACnBiE,eAAgB/D,EAChBgE,YAAa9D,CACf,EAEM+D,GAAkB,CACtBC,uBAAwB9D,EACxB+D,SAAU7D,EACV8D,cAAe5D,CACjB,EAEM6D,GAAe,CACnBC,iBAAkB5D,EAClB6D,oBAAqB3D,CACvB,EAEM4D,GAAc,CAAC,EAEfC,GAAc,CAAC,EAEfC,GAAW,IAAInH,GAAgBoG,EAAY,EAE3C5F,GAAS,IAAIL,GAAcmG,EAAU,EACrC7F,GAAc,IAAIL,GAAmBsG,EAAe,EACpDhG,GAAW,IAAIL,GAAgByG,EAAY,EAC3CM,GAAU,IAAI9G,GAAeC,EAAQC,GAAQC,GAAaC,EAAQ,EAElE2G,GAAU,IAAI1G,GAAesG,EAAW,EACxCK,GAAU,IAAI1G,GAAesG,EAAW,EAExCK,GAAmB,MAAOnC,GAAM,CACpCA,EAAEoC,eAAe,EAEb,GAAA,CACF,MAAMC,EAAU,IAAIC,GAClB/F,EACAG,EACAK,EACAwB,EACAwD,GACAC,GACAC,GACAlD,EACAE,EACAE,EACAE,EACA6C,EACF,EAAEK,SAAS,EAEF7G,EAAA8G,GAAWH,CAAO,CAAC,EAEnB3G,EAAAqF,EAAe,MAAM,CAAC,EACtBrF,EAAAmF,EAAW,+CAA+C,CAAC,QAC7DD,EAAO,CACLlF,EAAAqF,EAAe,OAAO,CAAC,EACvBrF,EAAAmF,EAAWD,EAAME,OAAO,CAAC,EAClCpF,EAAS+G,EAAiBC,KAAKC,IAAK,CAAA,CAAC,CACvC,CACF,EAEAC,OAAAA,EAAAA,UAAU,IAAM,CACVhH,GACFF,EAAS+G,EAAiBC,KAAKC,IAAK,CAAA,CAAC,CAEzC,EAAG,CAAC/G,CAAU,CAAC,EAEfgH,EAAAA,UAAU,IAAM,CACV/G,IACOH,EAAAmF,EAAWhF,CAAiB,CAAC,EAC7BH,EAAAqF,EAAe,SAAS,CAAC,EAClCrF,EAAS+G,EAAiBC,KAAKC,IAAK,CAAA,CAAC,EAEzC,EAAG,CAAC9G,CAAiB,CAAC,EAEtB+G,EAAAA,UAAU,IAAM,CACV9G,IACOJ,EAAAmF,EAAW/E,CAAe,CAAC,EAC3BJ,EAAAqF,EAAe,OAAO,CAAC,EAChCrF,EAAS+G,EAAiBC,KAAKC,IAAK,CAAA,CAAC,EAEzC,EAAG,CAAC7G,CAAe,CAAC,EAEpB8G,EAAAA,UAAU,IAAM,CACdlH,EAASmH,IAAiB,CAC5B,EAAG,EAAE,EAELD,EAAAA,UAAU,IAAM,CACdlH,EAASoH,IAAc,CACzB,EAAG,EAAE,EAELF,EAAAA,UAAU,IAAM,CACdlH,EAASqH,IAAe,CAC1B,EAAG,EAAE,EAELH,EAAAA,UAAU,IAAM,CACdlH,EAASsH,IAAiB,CAC5B,EAAG,EAAE,EAGHC,EAAAA,IAAAC,EAAAA,SAAA,CACEC,gBAAC,OACC,CAAAA,SAAA,CAAAF,EAAA,IAAC,MAAGE,SAAW,aAAA,CAAA,EAEfC,EAAA,KAAC,OAAK,CAAAC,OAAO,GACXF,SAAA,CAAAF,EAAA,IAAC,QAAA,CACCK,KAAK,OACLrD,KAAK,KACLsD,YAAY,KACZrD,MAAO3D,EACPiH,SAAUzD,CAAA,CACZ,EAEAkD,EAAA,IAAC,QAAA,CACCK,KAAK,OACLrD,KAAK,QACLsD,YAAY,QACZrD,MAAOxD,EACP8G,SAAUzD,CAAA,CACZ,EAEAkD,EAAA,IAAC,QAAA,CACCK,KAAK,OACLrD,KAAK,SACLsD,YAAY,SACZrD,MAAO/E,EACPqI,SAAUzD,CAAA,CACZ,EAEAkD,EAAA,IAAC,QAAA,CACCK,KAAK,OACLrD,KAAK,cACLsD,YAAY,cACZrD,MAAOnD,EACPyG,SAAUzD,CAAA,CACZ,EAECkD,EAAA,IAAA,KAAA,CAAGQ,UAAU,QAAQN,SAAM,QAAA,CAAA,EA0C3BF,EAAA,IAAA,KAAA,CAAGQ,UAAU,QAAQN,SAAW,aAAA,CAAA,EAUjCF,EAAA,IAAC,QAAA,CACCK,KAAK,OACLrD,KAAK,WACLsD,YAAY,WACZrD,MAAOvC,EACP6F,SAAUzD,CAAA,CACZ,EAUAqD,EAAA,KAAC,MAAI,CAAAK,UAAU,oBACbN,SAAA,CAACF,EAAA,IAAA,QAAA,CAAMS,IAAI,UAAUP,SAAqB,uBAAA,CAAA,EAEzCQ,MAAMC,QAAQ1H,CAAY,GACzBA,EAAa2H,IAAKC,GAChBV,EAAA,KAAC,MAAI,CAAAK,UAAU,mBACbN,SAAA,CAAAF,EAAA,IAAC,QAAA,CACCK,KAAK,WACL/G,GAAI,YAAYuH,EAAKvH,EAAE,GACvB2D,MAAO4D,EAAKvH,GACZwH,QAAShF,EAAqBU,SAASqE,EAAKvH,EAAE,EAC9CiH,SAAUA,IAAMjE,GAAiCuE,EAAKvH,EAAE,CAAA,CAC1D,EACA0G,EAAA,IAAC,SAAMe,QAAS,YAAYF,EAAKvH,EAAE,GAAK4G,WAAKzG,KAAM,CAAA,CAAA,CARd,EAAAoH,EAAKvH,EAS5C,CACD,EAEH0G,EAAAA,IAAC,MAAGE,SAAa,eAAA,CAAA,QAChB,MAAK,CAAAA,SAAAc,KAAKC,UAAUnF,EAAsB,KAAM,CAAC,CAAE,CAAA,CAAA,CACtD,CAAA,EAEAqE,EAAA,KAAC,MAAI,CAAAK,UAAU,oBACfN,SAAA,CAACF,EAAA,IAAA,QAAA,CAAMS,IAAI,UAAUP,SAAiB,mBAAA,CAAA,EAEnCQ,MAAMC,QAAQzH,CAAS,GACtBA,EAAU0H,IAAKC,GACbV,EAAA,KAAC,MAAI,CAAAK,UAAU,mBACbN,SAAA,CAAAF,EAAA,IAAC,QAAA,CACCK,KAAK,WACL/G,GAAI,YAAYuH,EAAKvH,EAAE,GACvB2D,MAAO4D,EAAKvH,GACZwH,QAAS9E,EAAkBQ,SAASqE,EAAKvH,EAAE,EAC3CiH,SAAUA,IAAM5D,GAA8BkE,EAAKvH,EAAE,CAAA,CACvD,EACA0G,EAAA,IAAC,SAAMe,QAAS,YAAYF,EAAKvH,EAAE,GAAK4G,WAAKzG,KAAM,CAAA,CAAA,CARd,EAAAoH,EAAKvH,EAS5C,CACD,EAEH0G,EAAAA,IAAC,MAAGE,SAAa,eAAA,CAAA,QAChB,MAAK,CAAAA,SAAAc,KAAKC,UAAUjF,EAAmB,KAAM,CAAC,CAAE,CAAA,CAAA,CACnD,CAAA,EAEAmE,EAAA,KAAC,MAAI,CAAAK,UAAU,oBACfN,SAAA,CAACF,EAAA,IAAA,QAAA,CAAMS,IAAI,UAAUP,SAAkB,oBAAA,CAAA,EAEpCQ,MAAMC,QAAQxH,CAAU,GACvBF,EAAa2H,IAAKC,GAChBV,EAAA,KAAC,MAAI,CAAAK,UAAU,mBACbN,SAAA,CAAAF,EAAA,IAAC,QAAA,CACCK,KAAK,WACL/G,GAAI,YAAYuH,EAAKvH,EAAE,GACvB2D,MAAO4D,EAAKvH,GACZwH,QAAS5E,EAAmBM,SAASqE,EAAKvH,EAAE,EAC5CiH,SAAUA,IAAM3D,GAA+BiE,EAAKvH,EAAE,CAAA,CACxD,EACA0G,EAAA,IAAC,SAAMe,QAAS,YAAYF,EAAKvH,EAAE,GAAK4G,WAAKzG,KAAM,CAAA,CAAA,CARd,EAAAoH,EAAKvH,EAS5C,CACD,EAEH0G,EAAAA,IAAC,MAAGE,SAAa,eAAA,CAAA,QAChB,MAAK,CAAAA,SAAAc,KAAKC,UAAU/E,EAAoB,KAAM,CAAC,CAAE,CAAA,CAAA,CACpD,CAAA,EAEAiE,EAAA,KAAC,MAAI,CAAAK,UAAU,oBACfN,SAAA,CAACF,EAAA,IAAA,QAAA,CAAMS,IAAI,UAAUP,SAAoB,sBAAA,CAAA,EAEtCQ,MAAMC,QAAQvH,CAAY,GACzBA,EAAawH,IAAKC,GAChBV,EAAA,KAAC,MAAI,CAAAK,UAAU,mBACbN,SAAA,CAAAF,EAAA,IAAC,QAAA,CACCK,KAAK,WACL/G,GAAI,YAAYuH,EAAKvH,EAAE,GACvB2D,MAAO4D,EAAKvH,GACZwH,QAAS1E,EAAqBI,SAASqE,EAAKvH,EAAE,EAC9CiH,SAAUA,IAAM1D,GAAiCgE,EAAKvH,EAAE,CAAA,CAC1D,EACA0G,EAAA,IAAC,SAAMe,QAAS,YAAYF,EAAKvH,EAAE,GAAK4G,WAAKzG,KAAM,CAAA,CAAA,CARd,EAAAoH,EAAKvH,EAS5C,CACD,EAEH0G,EAAAA,IAAC,MAAGE,SAAa,eAAA,CAAA,QAChB,MAAK,CAAAA,SAAAc,KAAKC,UAAU7E,EAAsB,KAAM,CAAC,CAAE,CAAA,CAAA,CACtD,CAAA,EAEC4D,EAAA,IAAA,KAAA,CAAGQ,UAAU,QAAQN,SAAQ,UAAA,CAAA,EA+C9BF,EAAA,IAAC,QAAA,CACCK,KAAK,OACLrD,KAAK,YACLsD,YAAY,YACZrD,MAAOrB,GACP2E,SAAUzD,CAAA,CACZ,QAEC,SAAO,CAAAoE,QAAShC,GACfgB,SAACF,EAAA,IAAA,KAAA,CAAGE,cAAG,CAAA,CACT,CAAA,CAAA,EACF,QAECiB,GAAmB,EAAA,CAAA,CACtB,CAAA,CACF,CAAA,CAEJ,CCzgBA,SAASC,IAAM,CAEX,OAAApB,EAAAA,IAAC,WAAQQ,UAAU,MACjBN,2BACEA,SAACF,EAAAA,IAAAxH,GAAA,CAAW,CAAA,CACd,CAAA,CACF,CAAA,CAEJ"}