{"version":3,"file":"ContactComponent.js","sources":["../../src/views/components/contact/MessageCardComponent.jsx","../../src/views/components/contact/ContactComponent.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { sendEmail } from '../../../controllers/contactSlice';\n\nfunction MessageCardComponent(props) {\n  const { page } = props;\n\n  const dispatch = useDispatch();\n\n  const [formData, setFormData] = useState({\n    first_name: '',\n    last_name: '',\n    email: '',\n    subject: '',\n    message: '',\n  });\n\n  const { firstname, lastname, email, subject, msg } = formData;\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = async () => {\n    dispatch(sendEmail({page, firstname, lastname, email, subject, msg}));\n  };\n\n  return (\n    <>\n      <form className=\"message-card\">\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <input\n                  type=\"text\"\n                  name=\"firstname\"\n                  className=\"input\"\n                  id=\"first_name\"\n                  placeholder=\"First Name\"\n                  onChange={handleInputChange}\n                  value={firstname}\n                />\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  name=\"lastname\"\n                  className=\"input\"\n                  id=\"last_name\"\n                  placeholder=\"Last Name\"\n                  onChange={handleInputChange}\n                  value={lastname}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <input\n                  name=\"email\"\n                  type=\"email\"\n                  id=\"contact_email\"\n                  className=\"input\"\n                  placeholder=\"Email\"\n                  onChange={handleInputChange}\n                  value={email}\n                />\n              </td>\n              <td>\n                <input\n                  name=\"subject\"\n                  type=\"text\"\n                  id=\"contact_subject\"\n                  className=\"input\"\n                  placeholder=\"Subject\"\n                  onChange={handleInputChange}\n                  value={subject}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td colSpan={2}>\n                <textarea\n                  name=\"msg\"\n                  type=\"text\"\n                  id=\"contact_message\"\n                  placeholder=\"Message\"\n                  onChange={handleInputChange}\n                  value={msg}></textarea>\n              </td>\n            </tr>\n            <tr>\n              <td colSpan={2}>\n                <input type=\"hidden\" name=\"action\" value=\"thfw_email_contact\" />\n                <button\n                  className=\"sendmsg\"\n                  id=\"contact_submit\"\n                  name=\"submit\"\n                  type=\"button\"\n                  value=\"submit\"\n                  onClick={handleSubmit}>\n                  <h3>SEND</h3>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </form>\n    </>\n  );\n}\n\nexport default MessageCardComponent;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport MessageCardComponent from './MessageCardComponent';\nimport StatusBarComponent from '../StatusBarComponent';\n\nimport { ContactPage, getContactPageContent } from '../../../controllers/contactSlice';\nimport { setMessage, setMessageType } from '../../../controllers/messageSlice';\n\nimport User from '../../../model/User';\n\nimport type { AppDispatch, RootState } from '../../../model/store';\n\ninterface ContactProps {\n  user: User;\n}\n\nconst ContactComponent: React.FC<ContactProps> = ({ user }) => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const { contactErrorMessage, contactSuccessMessage, contactPage } =\n    useSelector((state: RootState) => state.contact);\n\n  useEffect(() => {\n    dispatch(getContactPageContent());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (contactSuccessMessage) {\n      dispatch(setMessageType('success'));\n      dispatch(setMessage(contactSuccessMessage));\n\n      setTimeout(() => {\n        window.location.href = `/`;\n      }, 3000);\n    }\n  }, [contactSuccessMessage]);\n\n  useEffect(() => {\n    if (contactErrorMessage) {\n      dispatch(setMessageType('error'));\n      dispatch(setMessage(contactErrorMessage));\n    }\n  }, [contactErrorMessage]);\n\n  useEffect(() => {\n    if (contactPage?.message) {\n      dispatch(setMessage(contactPage.message));\n    }\n  }, [contactPage]);\n\n  return (\n    <main>\n      {contactPage?.title && <h2 className=\"title\">{contactPage.title}</h2>}\n\n      <div className=\"contact-card card\">\n        <MessageCardComponent page={'/contact'} />\n      </div>\n\n      <StatusBarComponent />\n    </main>\n  );\n}\n\nexport default ContactComponent;\n"],"names":["MessageCardComponent","props","page","dispatch","useDispatch","formData","setFormData","useState","first_name","last_name","email","subject","message","firstname","lastname","msg","handleInputChange","e","name","value","target","handleSubmit","sendEmail","jsx","Fragment","children","className","jsxs","type","id","placeholder","onChange","colSpan","onClick","ContactComponent","user","contactErrorMessage","contactSuccessMessage","contactPage","useSelector","state","useEffect","getContactPageContent","setMessageType","setMessage","StatusBarComponent"],"mappings":"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"}