{"version":3,"file":"Project.js","sources":["../../src/views/components/project/Details.jsx","../../src/views/components/project/FeaturesComponent.jsx","../../src/views/components/project/PricingComponent.jsx","../../src/views/components/project/TheSolution.tsx","../../src/views/components/project/ProjectURLs.jsx","../../src/views/components/Gallery.jsx","../../src/views/components/project/TheProblem.tsx","../../src/views/components/project/CheckList.jsx","../../src/views/components/project/Colors.jsx","../../src/views/components/project/Design.tsx","../../src/model/hooks.ts","../../src/views/components/project/Development.tsx","../../src/views/components/project/Delivery.tsx","../../src/views/components/project/TheProcess.tsx","../../src/views/components/project/ProjectComponent.tsx","../../src/views/Project.tsx"],"sourcesContent":["function ProjectDetails(props) {\n  const { project_details } = props;\n\n  return (\n    <>\n      {project_details ? (\n        <div className=\"project-details\">\n          <table>\n            <tbody>\n              <tr>\n                <td>\n                  <label htmlFor=\"client_name\">Client Name:</label>\n                </td>\n                <td>\n                  <h4 className=\"company-name\">\n                    {project_details.client_name}\n                  </h4>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <label htmlFor=\"start_date\">Start Date:</label>\n                </td>\n                <td>{project_details.start_date}</td>\n              </tr>\n              <tr>\n                <td>\n                  <label htmlFor=\"end_date\">End Date:</label>\n                </td>\n                <td>{project_details.end_date}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default ProjectDetails;\n","import React from 'react';\n\nfunction FeaturesComponent(props) {\n  const { features } = props;\n\n  return (\n    Array.isArray(features) && (\n      <div className=\"product-features-card card\">\n        <h3>Features</h3>\n\n        <div className=\"product-features\">\n          {features.map((feature) => (\n            <>\n              <p className=\"feature-name\" id=\"feature_name\">\n                {feature.name}\n              </p>\n            </>\n          ))}\n        </div>\n      </div>\n    )\n  );\n}\n\nexport default FeaturesComponent;\n","import React from 'react';\n\nfunction PricingComponent(props) {\n  const { currency, price } = props;\n\n  return (\n    <>\n      {currency && (\n        <div className=\"pricing\">\n          <h4>\n            {new Intl.NumberFormat('us', {\n              style: 'currency',\n              currency: currency,\n              minimumFractionDigits: 0,\n              maximumFractionDigits: 0,\n            }).format(price)}\n          </h4>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default PricingComponent;\n","import React from 'react';\n\nimport ProjectSolution from '../../../model/ProjectSolution';\n\nimport FeaturesComponent from './FeaturesComponent';\nimport PricingComponent from './PricingComponent';\n\ninterface SolutionProps {\n  solution: ProjectSolution\n}\n\nconst TheSolution: React.FC<SolutionProps> = ({ solution }) => {\n\n  return (\n    <>\n      <>\n        {solution && (\n          <>\n            <div className=\"project-solution\" id=\"project_solution\">\n              <FeaturesComponent features={solution.features} />\n\n              <PricingComponent currency={solution.currency} price={solution.price} />\n\n              <h3>THE SOLUTION</h3>\n\n              <div\n                className=\"card\"\n                dangerouslySetInnerHTML={{ __html: solution.content }}></div>\n            </div>\n          </>\n        )}\n      </>\n    </>\n  );\n}\n\nexport default TheSolution;\n","import { useSelector } from 'react-redux';\n\nfunction ProjectURLs(props) {\n  const { project_urls } = props;\n\n  return (\n    <>\n      {project_urls ? (\n        <div className=\"project-urls\">\n          {Object.keys(project_urls).map((key, index) => (\n            <button\n              key={index}\n              onClick={() => window.open(project_urls[key].url, '_blank')}>\n              <i className={`${project_urls[key].icon}`}></i>\n              <h3>{`${project_urls[key].name}`}</h3>\n            </button>\n          ))}\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default ProjectURLs;\n","import React, { useState, useRef } from 'react';\n\nfunction Gallery(props) {\n  const { title, gallery } = props;\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const galleryRowRef = useRef(null);\n\n  const previousPhoto = () => {\n    if (currentPhotoIndex > 0) {\n      setCurrentPhotoIndex(currentPhotoIndex - 1);\n    }\n  };\n\n  const nextPhoto = () => {\n    if (currentPhotoIndex < props.gallery.length - 1) {\n      setCurrentPhotoIndex(currentPhotoIndex + 1);\n    }\n  };\n\n  const handleTouchStart = (e) => {\n    // Capture the starting X coordinate when the user touches the gallery\n    const touchStartX = e.touches[0].clientX;\n    galleryRowRef.current.setAttribute('data-touch-start', touchStartX);\n  };\n\n  const handleTouchEnd = (e) => {\n    // Calculate the difference between the starting and ending X coordinates\n    const touchStartX = parseInt(\n      galleryRowRef.current.getAttribute('data-touch-start'),\n      10\n    );\n    const touchEndX = e.changedTouches[0].clientX;\n    const deltaX = touchEndX - touchStartX;\n\n    // Determine whether it's a left or right swipe based on deltaX\n    if (deltaX > 50) {\n      previousPhoto(); // Swipe right\n    } else if (deltaX < -50) {\n      nextPhoto(); // Swipe left\n    }\n  };\n\n  return (\n    <>\n      {gallery && gallery.length > 0 ? (\n        <>\n          {title && <h5 className=\"title\">{title}</h5>}\n\n          <div className=\"gallery\">\n            {currentPhotoIndex !== 0 ? (\n              <button className=\"arrow-left\" onClick={previousPhoto}>\n                <h2>V</h2>\n              </button>\n            ) : (\n              ''\n            )}\n\n            <div\n              className=\"gallery-row\"\n              onTouchStart={handleTouchStart}\n              onTouchEnd={handleTouchEnd}\n              ref={galleryRowRef}>\n              {Array.isArray(gallery) && (\n                <span className=\"gallery-photo\">\n                  <img\n                    className=\"photo\"\n                    src={gallery[currentPhotoIndex].url}\n                    alt={gallery[currentPhotoIndex].title}\n                    title={gallery[currentPhotoIndex].title}\n                  />\n                </span>\n              )}\n            </div>\n\n            {currentPhotoIndex !== props.gallery.length - 1 ? (\n              <button className=\"arrow-right\" onClick={nextPhoto}>\n                <h2>V</h2>\n              </button>\n            ) : (\n              ''\n            )}\n          </div>\n        </>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default Gallery;\n","import React from 'react';\n\nimport Gallery from '../Gallery';\nimport ContentComponent from '../ContentComponent';\nimport ProjectProblem from '../../../model/ProjectProblem';\n\ninterface ProblemProps {\n  problem: ProjectProblem\n}\n\nconst TheProblem: React.FC<ProblemProps> = ({ problem }) => {\n\n  return (\n    <>\n      <div className=\"project-problem\" id=\"project_problem\">\n        <h3 className=\"title\">the problem</h3>\n\n        <Gallery gallery={problem?.gallery} />\n\n        <ContentComponent content={problem?.content} />\n      </div>\n    </>\n  );\n}\n\nexport default TheProblem;\n","function CheckList(props) {\n  const { checkList } = props;\n\n  return (\n    <>\n      {checkList ? (\n        <div className=\"checklist\">\n          {Array.isArray(checkList) &&\n            checkList.map((task, index) => (\n              <span key={index}>\n                <input\n                  type=\"checkbox\"\n                  name={`task_${index}`}\n                  id={`task_${index}`}\n                  checked={task.status}\n                  disabled\n                />\n                <h4>{task.name}</h4>\n              </span>\n            ))}\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default CheckList;\n","import React from 'react';\n\nfunction Colors(props) {\n  const { colors } = props;\n\n  return (\n    <>\n      {colors ? (\n        <div className=\"colors\">\n          <h5 className=\"title\">Colors ({colors.length})</h5>\n          <div className=\"color-row\">\n            {Array.isArray(colors) &&\n              colors.map((colorObj, index) => (\n                <div className=\"color\" key={index}>\n                  <span\n                    className=\"color-square\"\n                    style={{ backgroundColor: colorObj.color }}></span>\n                  <h5>{colorObj.color}</h5>\n                </div>\n              ))}\n          </div>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default Colors;\n","import React from 'react';\n\nimport CheckList from './CheckList';\nimport Colors from './Colors';\nimport Gallery from '../Gallery';\nimport ContentComponent from '../ContentComponent';\nimport ProjectDesign from '../../../model/ProjectDesign';\n\ninterface DesignProps {\n  design: ProjectDesign;\n}\n\nconst Design: React.FC<DesignProps> = ({ design }) => {\n\n  return (\n    <>\n      <div className=\"project-process-design\" id=\"project_process_design\">\n        <h4 className=\"title\">design</h4>\n\n        <CheckList checklist={design?.checkList} />\n\n        <Colors colors={design?.colorsList} />\n\n        <Gallery title={'Logos'} gallery={design?.gallery?.logos} />\n\n        <Gallery title={'icons'} gallery={design?.gallery?.icons} />\n\n        <Gallery title={'animations'} gallery={design?.gallery?.animations} />\n\n        <Gallery title={'uml diagrams'} gallery={design?.gallery?.umlDiagrams} />\n\n        <ContentComponent content={design?.content} />\n      </div>\n    </>\n  );\n}\n\nexport default Design;\n","import { useDispatch, useSelector, TypedUseSelectorHook } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\nexport const dispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import React, { Component, lazy, Suspense, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport type { RootState, AppDispatch } from '../../../model/store';\nimport { useAppSelector } from '../../../model/hooks';\n\nimport CheckList from './CheckList';\nimport ContentComponent from '../ContentComponent';\nimport ProjectURLs from './ProjectURLs';\nimport Versions from './Versions';\n\nimport type { RepoQuery } from '../../../controllers/githubSlice';\nimport { getRepo } from '../../../controllers/githubSlice';\n\nimport ProjectDevelopment from '../../../model/ProjectDevelopment';\n\ninterface DevelopmentProps {\n  development: ProjectDevelopment;\n}\n\nconst Development: React.FC<DevelopmentProps> = ({ development }) => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const { repo } = useAppSelector((state: RootState) => state.github);\n\n  console.log(development?.repoURL);\n\n  useEffect(() => {\n    if (development?.repoURL) {\n      try {\n        const repoURL = new URL(development.repoURL);\n        const pathname = repoURL.pathname;\n        const parts = pathname.split('/').filter(Boolean); // Remove empty parts\n\n        if (parts.length >= 2) {\n          const query: RepoQuery = {\n            owner: parts[0], // GitHub username or organization\n            repo: parts[1],  // Repository name\n          };\n\n          dispatch(getRepo(query));\n        } else {\n          console.error('Invalid repository URL');\n        }\n      } catch (error) {\n        console.error('Invalid URL format:', error.message);\n      }\n    }\n  }, [development, dispatch]);\n\n  return (\n    <>\n      <div\n        className=\"project-process-development\"\n        id=\"project_process_development\">\n        <h4 className=\"title\">development</h4>\n\n\n        <CheckList checkList={development?.checkList} />\n\n        <ContentComponent content={development?.content} />\n\n        <h3>Project Last Updated: {repo?.data?.updated_at}</h3>\n\n        <ProjectURLs project_urls={development?.repoURL} />\n\n        {/* <Versions versions_list={development?.versionsList} /> */}\n      </div>\n    </>\n  );\n}\n\nexport default Development;\n","import React from 'react';\n\nimport CheckList from './CheckList';\nimport Gallery from '../Gallery';\nimport ContentComponent from '../ContentComponent';\n\nimport ProjectDelivery from '../../../model/ProjectDelivery';\n\ninterface DeliveryProps {\n  delivery: ProjectDelivery;\n}\n\nconst Delivery: React.FC<DeliveryProps> = ({ delivery }) => {\n\n  return (\n    <>\n      <div className=\"project-process-delivery\" id=\"project_process_delivery\">\n        <h4 className=\"title\">delivery</h4>\n\n        <CheckList checkList={delivery?.checkList} />\n\n        <Gallery gallery={delivery?.gallery} />\n\n        <ContentComponent content={delivery?.content} />\n      </div>\n    </>\n  );\n}\n\nexport default Delivery;\n","import React from 'react';\n\nimport ProjectStatus from '../ProjectStatus';\nimport Design from './Design.tsx';\nimport Development from './Development.tsx';\nimport Delivery from './Delivery.tsx';\n\nimport ProjectProcess from '../../../model/ProjectProcess.ts';\n\ninterface ProcessProps {\n  process: ProjectProcess;\n}\n\nconst TheProcess: React.FC<ProcessProps> = ({ process }) => {\n\n  return (\n    <>\n      {process && (\n        <div className=\"project-process\" id=\"project_process\">\n          <h3 className=\"title\">the process</h3>\n\n          <ProjectStatus project_status={process?.status} />\n\n          <Design design={process?.design} />\n\n          <Development development={process?.development} />\n\n          <Delivery delivery={process?.delivery} />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default TheProcess;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport type { AppDispatch } from '../../../model/store';\n\nimport Gallery from '../Gallery.jsx';\nimport ProjectDescription from '../portfolio/ProjectDescription.jsx';\nimport Details from './Details.jsx';\nimport TheSolution from './TheSolution.tsx';\nimport ProjectURLs from './ProjectURLs.jsx';\nimport TheProblem from './TheProblem.tsx';\nimport TaxList from '../TaxList.jsx';\nimport TaxListIcon from '../TaxListIcon.jsx';\nimport ProjectTeam from './ProjectTeam.jsx';\nimport TheProcess from './TheProcess.tsx';\n\nimport {\n  getProjectType,\n  getLanguage,\n  getFramework,\n  getTechnology,\n} from '../../../controllers/taxonomiesSlice.js';\n\nimport Project from '../../../model/Project.ts';\nimport Taxonomy from '../../../model/Taxonomy.ts';\n\ninterface ProjectProps {\n  project: Project | null\n}\n\nconst ProjectComponent: React.FC<ProjectProps> = ({ project }) => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const [types, setTypes] = useState<Array<Taxonomy> | null>(null);\n  const [languages, setLanguages] = useState<Array<Taxonomy> | null>(null);\n  const [frameworks, setFrameworks] = useState<Array<Taxonomy> | null>(null);\n  const [technologies, setTechnologies] = useState<Array<Taxonomy> | null>(null);\n\n  useEffect(() => {\n    if (Array.isArray(project?.types)) {\n      const fetchProjectTypes = async () => {\n        try {\n          const projectTypeData = await Promise.all(\n            project.types.map(async (tax: string) => {\n              const result = await dispatch(getProjectType(tax));\n              if (getProjectType.fulfilled.match(result)) {\n                return result.payload as Taxonomy;\n              } else {\n                console.error(\"Failed to fetch project type:\", result.error);\n                return null;\n              }\n            })\n          );\n\n          setTypes(projectTypeData.filter((type): type is Taxonomy => type !== null));\n        } catch (error) {\n          console.error(\"Error fetching project types:\", error);\n        }\n      };\n\n      fetchProjectTypes();\n    }\n  }, [project?.types, dispatch]);\n\n  useEffect(() => {\n    if (Array.isArray(project?.languages)) {\n      const fetchLanguages = async () => {\n        try {\n          const languageData = await Promise.all(\n            project.languages.map(async (tax) => {\n              const result = await dispatch(getLanguage(tax));\n              if (getLanguage.fulfilled.match(result)) {\n                return result.payload as Taxonomy;\n              } else {\n                console.error(\"Failed to fetch language:\", result.error);\n                return null;\n              }\n            })\n          );\n\n          setLanguages(languageData.filter((type): type is Taxonomy => type !== null));\n        } catch (error) {\n          console.error(\"Error fetching project types:\", error);\n        }\n      };\n\n      fetchLanguages();\n    }\n  }, [project?.languages, dispatch]);\n\n  useEffect(() => {\n    if (Array.isArray(project?.frameworks)) {\n      const fetchFrameworks = async () => {\n        try {\n          const frameworkData = await Promise.all(\n            project.frameworks.map(async (tax) => {\n              const result = await dispatch(getFramework(tax));\n              if (getFramework.fulfilled.match(result)) {\n                return result.payload as Taxonomy;\n              } else {\n                console.error(\"Failed to fetch language:\", result.error);\n                return null;\n              }\n            })\n          );\n\n          setFrameworks(frameworkData.filter((type): type is Taxonomy => type !== null));\n        } catch (error) {\n          console.error(\"Error fetching project types:\", error);\n        }\n      };\n\n      fetchFrameworks();\n    }\n  }, [project?.frameworks, dispatch]);\n\n  useEffect(() => {\n    if (Array.isArray(project?.technologies)) {\n      const fetchTechnologies = async () => {\n        const techData = await Promise.all(\n          project.technologies.map(async (tax) => {\n            const result = await dispatch(getTechnology(tax));\n\n            if (getTechnology.fulfilled.match(result)) {\n              return result.payload as Taxonomy;\n            } else {\n              console.error(\"Failed to fetch project type:\", result.error);\n              return null;\n            }\n          })\n        );\n\n        setTechnologies(techData.filter((type): type is Taxonomy => type !== null));\n      };\n\n      fetchTechnologies();\n    }\n  }, [project?.technologies, dispatch]);\n\n  return (\n    <>\n      <main className=\"project\">\n        {project?.title && <h1 className=\"title\">{project.title}</h1>}\n\n        <ProjectDescription description={project?.description} />\n\n        <ProjectURLs project_urls={project?.urlsList} />\n\n        {project?.solution && <TheSolution solution={project.solution} />}\n\n        {project?.process && <TheProcess process={project.process} />}\n\n        {project?.problem && <TheProblem problem={project?.problem} />}\n\n        <TaxList tax={types} title={'types'} />\n\n        <TaxListIcon tax={languages} title={'languages'} />\n\n        <TaxListIcon tax={frameworks} title={'frameworks'} />\n\n        <TaxListIcon tax={technologies} title={'technologies'} />\n\n        {/* Project details is for clients only */}\n        {project?.details && <Details project_details={project.details} />}\n      </main>\n    </>\n  );\n}\n\nexport default ProjectComponent;\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport LoadingComponent from './components/LoadingComponent';\nimport ProjectComponent from './components/project/ProjectComponent';\nimport StatusBarComponent from './components/StatusBarComponent';\n\nimport { getProject } from '../controllers/portfolioSlice';\n\nimport type { AppDispatch, RootState } from '../model/store';\n\nimport User from '../model/User';\n\nconst Project = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const { projectID } = useParams();\n\n  const { portfolioLoading, portfolioErrorMessage, project } = useSelector(\n    (state: RootState) => state.portfolio\n  );\n\n  useEffect(() => {\n    if (projectID) {\n      dispatch(getProject(projectID));\n    }\n  }, [dispatch, projectID]);\n\n  useEffect(() => {\n    if (project?.title) {\n      document.title = project?.title;\n    }\n  }, [project?.title]);\n\n  if (portfolioLoading) {\n    return <LoadingComponent />;\n  }\n  console.log(project);\n  return (\n    <section className=\"project\">\n      <>\n        {portfolioErrorMessage ? (\n          <main className=\"error-page\">\n            <StatusBarComponent />\n          </main>\n        ) : (\n          <ProjectComponent project={project} />\n        )}\n      </>\n    </section>\n  );\n}\n\nexport default Project;\n"],"names":["ProjectDetails","props","project_details","jsx","Fragment","children","className","jsxs","htmlFor","client_name","start_date","end_date","FeaturesComponent","features","Array","isArray","map","feature","id","name","PricingComponent","currency","price","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","TheSolution","solution","ProjectURLs","project_urls","Object","keys","key","index","onClick","window","open","url","icon","Gallery","title","gallery","currentPhotoIndex","setCurrentPhotoIndex","useState","galleryRowRef","useRef","previousPhoto","nextPhoto","length","handleTouchStart","e","touchStartX","touches","clientX","current","setAttribute","handleTouchEnd","parseInt","getAttribute","deltaX","changedTouches","onTouchStart","onTouchEnd","ref","src","alt","TheProblem","problem","ContentComponent","CheckList","checkList","task","type","checked","status","disabled","Colors","colors","colorObj","backgroundColor","color","Design","design","_a","_b","_c","_d","useAppSelector","useSelector","Development","development","dispatch","useDispatch","repo","state","useEffect","parts","query","getRepo","error","Delivery","delivery","TheProcess","process","ProjectStatus","ProjectComponent","project","types","setTypes","languages","setLanguages","frameworks","setFrameworks","technologies","setTechnologies","projectTypeData","tax","result","getProjectType","languageData","getLanguage","frameworkData","getFramework","techData","getTechnology","ProjectDescription","TaxList","TaxListIcon","Details","Project","projectID","useParams","portfolioLoading","portfolioErrorMessage","getProject","LoadingComponent","StatusBarComponent"],"mappings":"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"}