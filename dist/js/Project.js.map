{"version":3,"file":"Project.js","sources":["../../src/views/components/Gallery.jsx","../../src/views/components/project/Details.jsx","../../src/views/components/project/FeaturesComponent.jsx","../../src/views/components/project/PricingComponent.jsx","../../src/views/components/project/TheSolution.jsx","../../src/views/components/project/ProjectURLs.jsx","../../src/views/components/project/TheProblem.jsx","../../src/views/components/project/CheckList.jsx","../../src/views/components/project/Colors.jsx","../../src/views/components/project/Design.jsx","../../src/views/components/project/Versions.jsx","../../src/views/components/project/Development.jsx","../../src/views/components/project/Delivery.jsx","../../src/views/components/project/TheProcess.jsx","../../src/views/components/project/ProjectComponent.jsx","../../src/views/Project.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\n\nfunction Gallery(props) {\n  const { title, gallery } = props;\n  console.log(gallery);\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const galleryRowRef = useRef(null);\n\n  const previousPhoto = () => {\n    if (currentPhotoIndex > 0) {\n      setCurrentPhotoIndex(currentPhotoIndex - 1);\n    }\n  };\n\n  const nextPhoto = () => {\n    if (currentPhotoIndex < props.gallery.length - 1) {\n      setCurrentPhotoIndex(currentPhotoIndex + 1);\n    }\n  };\n\n  const handleTouchStart = (e) => {\n    // Capture the starting X coordinate when the user touches the gallery\n    const touchStartX = e.touches[0].clientX;\n    galleryRowRef.current.setAttribute('data-touch-start', touchStartX);\n  };\n\n  const handleTouchEnd = (e) => {\n    // Calculate the difference between the starting and ending X coordinates\n    const touchStartX = parseInt(\n      galleryRowRef.current.getAttribute('data-touch-start'),\n      10\n    );\n    const touchEndX = e.changedTouches[0].clientX;\n    const deltaX = touchEndX - touchStartX;\n\n    // Determine whether it's a left or right swipe based on deltaX\n    if (deltaX > 50) {\n      previousPhoto(); // Swipe right\n    } else if (deltaX < -50) {\n      nextPhoto(); // Swipe left\n    }\n  };\n\n  return (\n    <>\n      {gallery && gallery.length > 0 ? (\n        <>\n          {title && <h5 className=\"title\">{title}</h5>}\n\n          <div className=\"gallery\">\n            {currentPhotoIndex !== 0 ? (\n              <button className=\"arrow-left\" onClick={previousPhoto}>\n                <h2>V</h2>\n              </button>\n            ) : (\n              ''\n            )}\n\n            <div\n              className=\"gallery-row\"\n              onTouchStart={handleTouchStart}\n              onTouchEnd={handleTouchEnd}\n              ref={galleryRowRef}>\n              {Array.isArray(props.gallery) && (\n                <span className=\"gallery-photo\">\n                  <img\n                    className=\"photo\"\n                    src={props.gallery[currentPhotoIndex]}\n                    alt=\"\"\n                  />\n                </span>\n              )}\n            </div>\n\n            {currentPhotoIndex !== props.gallery.length - 1 ? (\n              <button className=\"arrow-right\" onClick={nextPhoto}>\n                <h2>V</h2>\n              </button>\n            ) : (\n              ''\n            )}\n          </div>\n        </>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default Gallery;\n","function ProjectDetails(props) {\n  const { project_details } = props;\n\n  return (\n    <>\n      {project_details ? (\n        <div className=\"project-details\">\n          <table>\n            <tbody>\n              <tr>\n                <td>\n                  <label htmlFor=\"client_name\">Client Name:</label>\n                </td>\n                <td>\n                  <h4 className=\"company-name\">\n                    {project_details.client_name}\n                  </h4>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <label htmlFor=\"start_date\">Start Date:</label>\n                </td>\n                <td>{project_details.start_date}</td>\n              </tr>\n              <tr>\n                <td>\n                  <label htmlFor=\"end_date\">End Date:</label>\n                </td>\n                <td>{project_details.end_date}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default ProjectDetails;\n","import React from 'react';\n\nfunction FeaturesComponent(props) {\n  const { features } = props;\n\n  return (\n    Array.isArray(features) && (\n      <div className=\"product-features-card card\">\n        <h3>Features</h3>\n\n        <div className=\"product-features\">\n          {features.map((feature) => (\n            <>\n              <p className=\"feature-name\" id=\"feature_name\">\n                {feature.name}\n              </p>\n            </>\n          ))}\n        </div>\n      </div>\n    )\n  );\n}\n\nexport default FeaturesComponent;\n","import React from 'react';\n\nfunction PricingComponent(props) {\n  const { currency, price } = props;\n\n  return (\n    <>\n      {currency && (\n        <div className=\"pricing\">\n          <h4>\n            {new Intl.NumberFormat('us', {\n              style: 'currency',\n              currency: currency,\n              minimumFractionDigits: 0,\n              maximumFractionDigits: 0,\n            }).format(price)}\n          </h4>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default PricingComponent;\n","import FeaturesComponent from './FeaturesComponent';\nimport PricingComponent from './PricingComponent';\n\nfunction TheSolution(props) {\n  const { solution } = props;\n\n  return (\n    <>\n      <>\n        {solution && (\n          <>\n            <div className=\"project-solution\" id=\"project_solution\">\n              <FeaturesComponent features={solution.features} />\n\n              <PricingComponent currency={solution.currency} price={solution.price} />\n\n              <h3>THE SOLUTION</h3>\n\n              <div\n                className=\"card\"\n                dangerouslySetInnerHTML={{ __html: solution.content }}></div>\n            </div>\n          </>\n        )}\n      </>\n    </>\n  );\n}\n\nexport default TheSolution;\n","import { useSelector } from 'react-redux';\n\nfunction ProjectURLs(props) {\n  const { project_urls } = props;\n\n  return (\n    <>\n      {project_urls ? (\n        <div className=\"project-urls\">\n          {Object.keys(project_urls).map((key, index) => (\n            <button\n              key={index}\n              onClick={() => window.open(project_urls[key].url, '_blank')}>\n              <i className={`${project_urls[key].icon}`}></i>\n              <h3>{`${project_urls[key].name}`}</h3>\n            </button>\n          ))}\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default ProjectURLs;\n","import Gallery from '../Gallery';\nimport ContentComponent from '../ContentComponent';\n\nfunction TheProblem(props) {\n  const { problem } = props;\n\n  return (\n    <>\n      <div className=\"project-problem\" id=\"project_problem\">\n        <h3 className=\"title\">the problem</h3>\n\n        <Gallery gallery={problem?.gallery} />\n\n        <ContentComponent content={problem?.content} />\n      </div>\n    </>\n  );\n}\n\nexport default TheProblem;\n","function CheckList(props) {\n  const { checkList } = props;\n\n  return (\n    <>\n      {checkList ? (\n        <div className=\"checklist\">\n          {Array.isArray(checkList) &&\n            checkList.map((task, index) => (\n              <span key={index}>\n                <input\n                  type=\"checkbox\"\n                  name={`task_${index}`}\n                  id={`task_${index}`}\n                  checked={task.status}\n                  disabled\n                />\n                <h4>{task.name}</h4>\n              </span>\n            ))}\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default CheckList;\n","import React from 'react';\n\nfunction Colors(props) {\n  const { colors } = props;\n\n  return (\n    <>\n      {colors ? (\n        <div className=\"colors\">\n          <h5 className=\"title\">Colors ({colors.length})</h5>\n          <div className=\"color-row\">\n            {Array.isArray(colors) &&\n              colors.map((colorObj, index) => (\n                <div className=\"color\" key={index}>\n                  <span\n                    className=\"color-square\"\n                    style={{ backgroundColor: colorObj.color }}></span>\n                  <h5>{colorObj.color}</h5>\n                </div>\n              ))}\n          </div>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default Colors;\n","import CheckList from './CheckList';\nimport Colors from './Colors';\nimport Gallery from '../Gallery';\nimport ContentComponent from '../ContentComponent';\n\nfunction Design(props) {\n  const { design } = props;\n\n  return (\n    <>\n      <div className=\"project-process-design\" id=\"project_process_design\">\n        <h4 class=\"title\">design</h4>\n\n        <CheckList checklist={design.checkList} />\n\n        <Colors colors={design.colorsList} />\n\n        <Gallery title={'Logos'} gallery={design.gallery.logos} />\n\n        <Gallery title={'icons'} gallery={design.gallery.icons} />\n\n        <Gallery title={'animations'} gallery={design.gallery.animations} />\n\n        <Gallery title={'uml diagrams'} gallery={design.gallery.umlDiagrams} />\n\n        <ContentComponent content={design.content} />\n      </div>\n    </>\n  );\n}\n\nexport default Design;\n","import { useSelector } from 'react-redux';\n\nfunction Versions() {\n  const { project_versions } = useSelector((state) => state.portfolio);\n\n  return (\n    <>\n      {project_versions ? (\n        <div className=\"versions\">\n          <span className=\"current-version\">\n            <h4>Current Version</h4>\n            {project_versions.current_version}\n          </span>\n\n          <span className=\"upcoming-versions\">\n            <h4>Upcoming Versions</h4>\n            <table>\n              <tbody>\n                {Array.isArray(project_versions[0]) &&\n                  project_versions[0].map((version, index) => (\n                    <tr key={index}>\n                      <td className=\"feature\">{version.title}</td>\n                      <td>-</td>\n                      <td>{version.version}</td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </span>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default Versions;\n","import CheckList from './CheckList';\nimport ContentComponent from '../ContentComponent';\nimport ProjectURLs from './ProjectURLs';\nimport Versions from './Versions';\n\nfunction Development(props) {\n  const { development } = props;\n\n  return (\n    <>\n      <div\n        className=\"project-process-development\"\n        id=\"project_process_development\">\n        <h4 class=\"title\">development</h4>\n\n        <CheckList checkList={development.checkList} />\n\n        <ContentComponent content={development.content} />\n\n        <ProjectURLs project_urls={development.repoURL} />\n\n        <Versions versions_list={development.versionsList} />\n      </div>\n    </>\n  );\n}\n\nexport default Development;\n","import CheckList from './CheckList';\nimport Gallery from '../Gallery';\nimport ContentComponent from '../ContentComponent';\n\nfunction Delivery(props) {\n  const { delivery } = props;\n\n  return (\n    <>\n      <div className=\"project-process-delivery\" id=\"project_process_delivery\">\n        <h4 class=\"title\">delivery</h4>\n\n        <CheckList checkList={delivery.checkList} />\n\n        <Gallery gallery={delivery.gallery}/>\n\n        <ContentComponent content={delivery.content} />\n      </div>\n    </>\n  );\n}\n\nexport default Delivery;\n","import ProjectStatus from '../ProjectStatus';\nimport Design from './Design';\nimport Development from './Development';\nimport Delivery from './Delivery';\n\nfunction TheProcess(props) {\n  const { process } = props;\n\n  return (\n    <>\n      {process && (\n        <div className=\"project-process\" id=\"project_process\">\n          <h3 class=\"title\">the process</h3>\n\n          <ProjectStatus project_status={process.status} />\n\n          <Design design={process.design} />\n\n          <Development development={process.development} />\n\n          <Delivery delivery={process.delivery} />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default TheProcess;\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Gallery from '../Gallery';\nimport ProjectDescription from '../portfolio/ProjectDescription';\nimport Details from './Details';\nimport TheSolution from './TheSolution';\nimport ProjectURLs from './ProjectURLs';\nimport TheProblem from './TheProblem';\nimport TaxList from '../TaxList';\nimport TaxListIcon from '../TaxListIcon';\nimport ProjectTeam from './ProjectTeam';\nimport TheProcess from './TheProcess';\n\nimport {\n  getProjectType,\n  getLanguage,\n  getFramework,\n  getTechnology,\n} from '../../../controllers/taxonomiesSlice';\n\nfunction ProjectComponent(props) {\n  const dispatch = useDispatch();\n\n  const { project } = props;\n\n  const [types, setTypes] = useState([]);\n  const [languages, setLanguages] = useState([]);\n  const [frameworks, setFrameworks] = useState([]);\n  const [technologies, setTechnologies] = useState([]);\n\n  useEffect(() => {\n    if (Array.isArray(project.types)) {\n      const fetchProjectTypes = async () => {\n        const projectTypeData = await Promise.all(\n          project.types.map(async (tax) => {\n            const projectType = await dispatch(getProjectType(tax));\n            return projectType.payload;\n          })\n        );\n\n        setTypes(projectTypeData);\n      };\n\n      fetchProjectTypes();\n    }\n  }, [project.types, dispatch]);\n\n  useEffect(() => {\n    if (Array.isArray(project.languages)) {\n      const fetchLanguages = async () => {\n        const languageData = await Promise.all(\n          project.languages.map(async (tax) => {\n            const language = await dispatch(getLanguage(tax));\n            return language.payload;\n          })\n        );\n\n        setLanguages(languageData);\n      };\n\n      fetchLanguages();\n    }\n  }, [project.languages, dispatch]);\n\n  useEffect(() => {\n    if (Array.isArray(project.frameworks)) {\n      const fetchFrameworks = async () => {\n        const frameworkData = await Promise.all(\n          project.frameworks.map(async (tax) => {\n            const framework = await dispatch(getFramework(tax));\n            return framework.payload;\n          })\n        );\n\n        setFrameworks(frameworkData);\n      };\n\n      fetchFrameworks();\n    }\n  }, [project.frameworks, dispatch]);\n\n  useEffect(() => {\n    if (Array.isArray(project.technologies)) {\n      const fetchTechnologies = async () => {\n        const techData = await Promise.all(\n          project.technologies.map(async (tech) => {\n            const technology = await dispatch(getTechnology(tech));\n            return technology.payload;\n          })\n        );\n\n        setTechnologies(techData);\n      };\n\n      fetchTechnologies();\n    }\n  }, [project.technologies, dispatch]);\n\n  return (\n    <>\n      <main className=\"project\">\n        {project.title && <h1 class=\"title\">{project.title}</h1>}\n\n        <ProjectDescription description={project.description} />\n\n        <ProjectURLs project_urls={project.urlsList} />\n\n        <TheSolution solution={project.solution} />\n\n        <TheProcess process={project.process} />\n\n        <TheProblem problem={project.problem} />\n\n        <TaxList tax={types} title={'types'} />\n\n        <TaxListIcon tax={languages} title={'languages'} />\n\n        <TaxListIcon tax={frameworks} title={'frameworks'} />\n\n        <TaxListIcon tax={technologies} title={'technologies'} />\n\n        {/* Project details is for clients only */}\n        <Details project_details={project.detailsList} />\n      </main>\n    </>\n  );\n}\n\nexport default ProjectComponent;\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport LoadingComponent from './components/LoadingComponent';\nimport ProjectComponent from './components/project/ProjectComponent';\nimport StatusBarComponent from './components/StatusBarComponent';\n\nimport { getProject } from '../controllers/portfolioSlice';\n\nfunction Project() {\n  const { projectID } = useParams();\n\n  const { portfolioLoading, portfolioErrorMessage, project } = useSelector(\n    (state) => state.portfolio\n  );\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (projectID) {\n      dispatch(getProject(projectID));\n    }\n  }, [dispatch, projectID]);\n\n  useEffect(() => {\n    document.title = project.title;\n  }, [project.title]);\n\n  if (portfolioLoading) {\n    return <LoadingComponent />;\n  }\n  console.log(project);\n  return (\n    <section className=\"project\">\n      <>\n        {portfolioErrorMessage ? (\n          <main className=\"error-page\">\n            <StatusBarComponent\n              messageType={'error'}\n              message={portfolioErrorMessage}\n            />\n          </main>\n        ) : (\n          <ProjectComponent project={project} />\n        )}\n      </>\n    </section>\n  );\n}\n\nexport default Project;\n"],"names":["Gallery","props","title","gallery","console","log","currentPhotoIndex","setCurrentPhotoIndex","useState","galleryRowRef","useRef","previousPhoto","nextPhoto","length","handleTouchStart","e","touchStartX","touches","clientX","current","setAttribute","handleTouchEnd","parseInt","getAttribute","deltaX","changedTouches","jsx","Fragment","children","jsxs","className","onClick","onTouchStart","onTouchEnd","ref","Array","isArray","src","alt","ProjectDetails","project_details","htmlFor","client_name","start_date","end_date","FeaturesComponent","features","map","feature","id","name","PricingComponent","currency","price","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","TheSolution","solution","dangerouslySetInnerHTML","__html","content","ProjectURLs","project_urls","Object","keys","key","index","window","open","url","icon","TheProblem","problem","ContentComponent","CheckList","checkList","task","type","checked","status","disabled","Colors","colors","colorObj","backgroundColor","color","Design","design","class","checklist","colorsList","logos","icons","animations","umlDiagrams","Versions","project_versions","useSelector","state","portfolio","current_version","version","Development","development","repoURL","versions_list","versionsList","Delivery","delivery","TheProcess","process","ProjectStatus","project_status","ProjectComponent","dispatch","useDispatch","project","types","setTypes","languages","setLanguages","frameworks","setFrameworks","technologies","setTechnologies","useEffect","projectTypeData","Promise","all","tax","getProjectType","payload","languageData","getLanguage","frameworkData","getFramework","techData","tech","getTechnology","ProjectDescription","description","urlsList","TaxList","TaxListIcon","Details","detailsList","Project","projectID","useParams","portfolioLoading","portfolioErrorMessage","getProject","document","LoadingComponent","StatusBarComponent","messageType","message"],"mappings":"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"}