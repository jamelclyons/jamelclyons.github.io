{"version":3,"file":"ContactComponent.CmY2Xpo3.js","sources":["../../../src/views/components/contact/MessageCardComponent.tsx","../../../src/views/components/contact/ContactComponent.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { sendEmail } from '../../../controllers/contactSlice';\n\nfunction MessageCardComponent(props) {\n  const { page } = props;\n\n  const dispatch = useDispatch();\n\n  const [formData, setFormData] = useState({\n    first_name: '',\n    last_name: '',\n    email: '',\n    subject: '',\n    message: '',\n  });\n\n  const { firstname, lastname, email, subject, msg } = formData;\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = async () => {\n    dispatch(sendEmail({page, firstname, lastname, email, subject, msg}));\n  };\n\n  return (\n    <>\n      <form className=\"message-card\">\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <input\n                  type=\"text\"\n                  name=\"firstname\"\n                  className=\"input\"\n                  id=\"first_name\"\n                  placeholder=\"First Name\"\n                  onChange={handleInputChange}\n                  value={firstname}\n                />\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  name=\"lastname\"\n                  className=\"input\"\n                  id=\"last_name\"\n                  placeholder=\"Last Name\"\n                  onChange={handleInputChange}\n                  value={lastname}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <input\n                  name=\"email\"\n                  type=\"email\"\n                  id=\"contact_email\"\n                  className=\"input\"\n                  placeholder=\"Email\"\n                  onChange={handleInputChange}\n                  value={email}\n                />\n              </td>\n              <td>\n                <input\n                  name=\"subject\"\n                  type=\"text\"\n                  id=\"contact_subject\"\n                  className=\"input\"\n                  placeholder=\"Subject\"\n                  onChange={handleInputChange}\n                  value={subject}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td colSpan={2}>\n                <textarea\n                  name=\"msg\"\n                  type=\"text\"\n                  id=\"contact_message\"\n                  placeholder=\"Message\"\n                  onChange={handleInputChange}\n                  value={msg}></textarea>\n              </td>\n            </tr>\n            <tr>\n              <td colSpan={2}>\n                <input type=\"hidden\" name=\"action\" value=\"thfw_email_contact\" />\n                <button\n                  className=\"sendmsg\"\n                  id=\"contact_submit\"\n                  name=\"submit\"\n                  type=\"button\"\n                  value=\"submit\"\n                  onClick={handleSubmit}>\n                  <h3>SEND</h3>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </form>\n    </>\n  );\n}\n\nexport default MessageCardComponent;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport MessageCardComponent from './MessageCardComponent';\nimport StatusBarComponent from '../StatusBarComponent';\n\nimport { ContactPage, getContactPageContent } from '../../../controllers/contactSlice';\nimport { setMessage, setMessageType } from '../../../controllers/messageSlice';\n\nimport User from '../../../model/User';\n\nimport type { AppDispatch, RootState } from '../../../model/store';\n\ninterface ContactProps {\n  user: User;\n}\n\nconst ContactComponent: React.FC<ContactProps> = ({ user }) => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const { contactErrorMessage, contactSuccessMessage, contactPage } =\n    useSelector((state: RootState) => state.contact);\n\n  useEffect(() => {\n    dispatch(getContactPageContent());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (contactSuccessMessage) {\n      dispatch(setMessageType('success'));\n      dispatch(setMessage(contactSuccessMessage));\n\n      setTimeout(() => {\n        window.location.href = `/`;\n      }, 3000);\n    }\n  }, [contactSuccessMessage]);\n\n  useEffect(() => {\n    if (contactErrorMessage) {\n      dispatch(setMessageType('error'));\n      dispatch(setMessage(contactErrorMessage));\n    }\n  }, [contactErrorMessage]);\n\n  useEffect(() => {\n    if (contactPage?.message) {\n      dispatch(setMessage(contactPage.message));\n    }\n  }, [contactPage]);\n\n  return (\n    <main>\n      {contactPage?.title && <h2 className=\"title\">{contactPage.title}</h2>}\n\n      <div className=\"contact-card card\">\n        <MessageCardComponent page={'/contact'} />\n      </div>\n\n      <StatusBarComponent />\n    </main>\n  );\n}\n\nexport default ContactComponent;\n"],"names":["MessageCardComponent","props","page","dispatch","useDispatch","formData","setFormData","useState","firstname","lastname","email","subject","msg","handleInputChange","e","name","value","handleSubmit","sendEmail","jsx","Fragment","jsxs","ContactComponent","user","contactErrorMessage","contactSuccessMessage","contactPage","useSelector","state","useEffect","getContactPageContent","setMessageType","setMessage","StatusBarComponent"],"mappings":"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"}