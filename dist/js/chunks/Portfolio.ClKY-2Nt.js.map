{"version":3,"file":"Portfolio.ClKY-2Nt.js","sources":["../../../src/views/Portfolio.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport type { AppDispatch, RootState } from '../model/store';\n\nimport { getPortfolio } from '../controllers/portfolioSlice';\nimport {\n  getLanguages,\n  getProjectTypes,\n  getFrameworks,\n  getTechnologies,\n} from '../controllers/taxonomiesSlice';\n\nimport LoadingComponent from './components/LoadingComponent';\nimport PortfolioComponent from './components/portfolio/PortfolioComponent';\nimport StatusBarComponent from './components/StatusBarComponent';\n\nimport User from '../model/User';\n\ninterface PortfolioProps {\n  user: User;\n}\n\nconst Portfolio: React.FC<PortfolioProps> = ({ user }) => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const { portfolioLoading, portfolio, portfolioErrorMessage } = useSelector(\n    (state: RootState) => state.portfolio\n  );\n  const { projectTypes, languages, frameworks, technologies } = useSelector(\n    (state: RootState) => state.taxonomies\n  );\n\n  useEffect(() => {\n    document.title = `Portfolio - ${user?.name}`;\n  }, []);\n\n  useEffect(() => {\n    dispatch(getPortfolio());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getProjectTypes());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getLanguages());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getFrameworks());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getTechnologies());\n  }, [dispatch]);\n\n  if (portfolioLoading) {\n    return <LoadingComponent />;\n  }\n\n  return (\n    <section className=\"portfolio\">\n      <>\n        {portfolio ? (\n          <PortfolioComponent\n            portfolio={portfolio}\n            projectTypes={projectTypes}\n            languages={languages}\n            frameworks={frameworks}\n            technologies={technologies}\n          />\n        ) : (\n          <StatusBarComponent />\n        )}\n      </>\n    </section>\n  );\n}\n\nexport default Portfolio;\n"],"names":["Portfolio","user","dispatch","useDispatch","portfolioLoading","portfolio","portfolioErrorMessage","useSelector","state","projectTypes","languages","frameworks","technologies","useEffect","getPortfolio","getProjectTypes","getLanguages","getFrameworks","getTechnologies","LoadingComponent","jsx","PortfolioComponent","StatusBarComponent"],"mappings":"uTAuBA,MAAMA,EAAsC,CAAC,CAAE,KAAAC,KAAW,CACxD,MAAMC,EAAWC,EAAyB,EAEpC,CAAE,iBAAAC,EAAkB,UAAAC,EAAW,sBAAAC,CAA0B,EAAAC,EAC5DC,GAAqBA,EAAM,SAC9B,EACM,CAAE,aAAAC,EAAc,UAAAC,EAAW,WAAAC,EAAY,aAAAC,CAAiB,EAAAL,EAC3DC,GAAqBA,EAAM,UAC9B,EA0BA,OAxBAK,EAAAA,UAAU,IAAM,CACL,SAAA,MAAQ,eAAeZ,GAAM,IAAI,EAC5C,EAAG,EAAE,EAELY,EAAAA,UAAU,IAAM,CACdX,EAASY,GAAc,CAAA,EACtB,CAACZ,CAAQ,CAAC,EAEbW,EAAAA,UAAU,IAAM,CACdX,EAASa,GAAiB,CAAA,EACzB,CAACb,CAAQ,CAAC,EAEbW,EAAAA,UAAU,IAAM,CACdX,EAASc,GAAc,CAAA,EACtB,CAACd,CAAQ,CAAC,EAEbW,EAAAA,UAAU,IAAM,CACdX,EAASe,GAAe,CAAA,EACvB,CAACf,CAAQ,CAAC,EAEbW,EAAAA,UAAU,IAAM,CACdX,EAASgB,GAAiB,CAAA,EACzB,CAAChB,CAAQ,CAAC,EAETE,QACMe,EAAiB,EAAA,EAIxBC,MAAA,UAAA,CAAQ,UAAU,YACjB,2BACG,SACCf,EAAAe,EAAA,IAACC,EAAA,CACC,UAAAhB,EACA,aAAAI,EACA,UAAAC,EACA,WAAAC,EACA,aAAAC,CAAA,CAGF,EAAAQ,EAAA,IAACE,EAAmB,EAAA,CAAA,CAExB,CACF,CAAA,CAEJ"}